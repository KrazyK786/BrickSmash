{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/games/bricksmash/bricksmash.component.ts","webpack:///src/app/components/games/bricksmash/bricksmash.component.html","webpack:///src/app/components/games/tetris/tetris.component.ts","webpack:///src/app/components/games/tetris/tetris.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/guards/auth.guard.ts","webpack:///src/app/models/Ball.ts","webpack:///src/app/models/Brick.ts","webpack:///src/app/models/Paddle.ts","webpack:///src/app/models/Piece.ts","webpack:///src/app/models/constants.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/comments/comments.service.ts","webpack:///src/app/services/friends/friends.service.ts","webpack:///src/app/services/games/bricksmash/bricksmash.service.ts","webpack:///src/app/services/games/game.service.ts","webpack:///src/app/services/games/tetris/tetris.service.ts","webpack:///src/app/services/profile/profile.service.ts","webpack:///src/app/services/search/search.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","canActivate","tokenGetter","localStorage","getItem","AppModule","onSameUrlNavigation","config","whitelistedDomains","Array","RegExp","blacklistedRoutes","declarations","providers","bootstrap","DashboardComponent","authService","commentsService","getProfile","subscribe","profile","user","console","log","err","deleteComment","res","success","BricksmashComponent","bricksmashService","gameService","moves","RIGHT","paddle","rightPressed","leftPressed","LEFT","event","gameStarted","preventDefault","ctx","clearRect","canvas","width","height","update","relativeX","x","offsetLeft","highScore","games","bricksmash","highscore","getHighScores","resArray","highscoreUserArray","initBrickSmash","nativeElement","getContext","resetGame","ball","bricks","initBricks","requestId","cancelAnimationFrame","animate","paused","updateBall","updateBricks","drawBrickSmash","requestAnimationFrame","bind","pauseButtonText","pauseButtonClass","score","lives","spawn","pause","paddleCollision","screenCollision","gameOver","respawn","i","length","tmpBrick","brickCollision","status","draw","drawBricks","tmpBricks","brickRowCount","brickColumnCount","c","r","brickWidth","brickHeight","brickPadding","brickOffsetTop","brickOffsetLeft","brickX","brickY","newBrick","push","forEach","brick","updateScore","fillStyle","fillRect","font","fillText","TetrisComponent","tetrisService","p","DOWN","y","SPACE","UP","rotate","ESC","piece","valid","board","points","HARD_DROP","move","SOFT_DROP","tetris","initBoard","initNext","scale","ctxNext","canvasNext","row","value","drawBoard","next","drawNext","time","start","performance","now","elapsed","level","drop","drawPiece","freeze","clearLines","shape","lines","every","splice","unshift","fill","getLinesClearedPoints","getEmptyBoard","HomeComponent","LoginComponent","router","flashMessage","username","password","authenticateUser","data","storeUserData","token","show","cssClass","timeout","navigate","msg","onLoginSubmit","NavbarComponent","JSON","parse","logout","rows","ProfileComponent","route","friendsService","profileService","destroyed","fetchData","editingProfile","events","pipe","complete","snapshot","paramMap","get","getUserById","newProfile","rowCount","profileString","char","String","error","addComment","comment","addFriend","updateUserData","deleteFriend","self","_id","profileId","friendsArr","friends","friendId","editProfile","RegisterComponent","validateService","name","email","validateRegister","validateEmail","registerUser","onRegisterSubmit","SearchComponent","searchService","type","searchTerm","trim","searchUsers","returnedUsers","submitSearch","AuthGuard","loggedIn","Ball","velocity","radius","color","mass","beginPath","arc","Math","PI","closePath","Brick","rect","Paddle","random","Piece","typeId","randomizeTetrominoType","currentX","currentY","colorDarker","colorLighter","noOfTypes","floor","add3D","KEY","COLS","ROWS","BLOCK_SIZE","LINES_PER_LEVEL","COLORS","SHAPES","POINTS","SINGLE","DOUBLE","TRIPLE","TETRIS","LEVEL","AuthService","http","jwtHelper","headers","append","post","loadToken","httpOptions","authToken","decodedToken","decodeToken","setItem","stringify","isTokenExpired","clear","providedIn","CommentsService","commentId","recipientId","userId","body","toId","commentBody","put","FriendsService","BricksmashService","collisionOccurred","GameService","scoreToUpdate","game","sortedUsers","TetrisService","from","dy","dx","isEmpty","insideWalls","aboveFloor","notOccupied","reverse","lineClearPoints","ProfileService","SearchService","params","ValidateService","re","test","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'BrickSmassshhhhh';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <flash-messages></flash-messages>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule,Routes } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { ValidateService } from \"./services/validate.service\";\r\nimport { FlashMessagesModule } from \"angular2-flash-messages\";\r\nimport { AuthService } from \"./services/auth.service\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { JwtHelperService, JwtModule } from \"@auth0/angular-jwt\";\r\nimport { AuthGuard } from \"./guards/auth.guard\";\r\nimport { BricksmashComponent } from './components/games/bricksmash/bricksmash.component';\r\nimport { TetrisComponent } from './components/games/tetris/tetris.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {path:'', component: HomeComponent},\r\n  {path:'register', component: RegisterComponent},\r\n  {path:'login', component: LoginComponent},\r\n  {path:'search', component: SearchComponent, canActivate:[AuthGuard]},\r\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\r\n  {path:'profile/:id', component: ProfileComponent, canActivate:[AuthGuard]},\r\n  {path:'games/bricksmash', component: BricksmashComponent, canActivate:[AuthGuard]},\r\n  {path:'games/tetris', component: TetrisComponent, canActivate:[AuthGuard]}\r\n];\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem(\"id_token\");\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ProfileComponent,\r\n    BricksmashComponent,\r\n    TetrisComponent,\r\n    SearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot(appRoutes, {\r\n      onSameUrlNavigation: 'reload'\r\n    }),\r\n    FormsModule,\r\n    FlashMessagesModule.forRoot(),\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config:{\r\n        tokenGetter: tokenGetter,\r\n        // whitelistedDomains: [\"localhost:3001\"],\r\n        whitelistedDomains: new Array(new RegExp('^null$')),\r\n        blacklistedRoutes: [\"example.com\"]\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    ValidateService,\r\n    AuthService,\r\n    AuthGuard,\r\n    JwtModule,\r\n    JwtHelperService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\nimport { User } from \"../../models/user\";\r\nimport { UserData } from \"../../models/UserData\";\r\nimport {CommentsService} from \"../../services/comments/comments.service\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  user: UserData;\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private commentsService: CommentsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getProfile().subscribe(profile => {\r\n        this.user = profile.user;\r\n        console.log(profile);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  deleteComment(id: number): void {\r\n    this.commentsService.deleteComment(id).subscribe(res => {\r\n      if (res.success === true){\r\n        this.user = res.user;\r\n        console.log(res.user);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"user\">\r\n  <h2 class=\"page-header\">Dashboard</h2>\r\n  <p>\r\n    <!--  Welcome to your Dashboard!-->\r\n    Welcome to your Dashboard {{user.name}}!\r\n  </p>\r\n\r\n  <div class=\"jumbotron text-center\">\r\n    <h1>{{user.name}}'s Arcade Library</h1>\r\n<!--    <p class=\"lead\">Welcome to The Arcade Library!! Low-tech fun in a high-tech world :)</p>-->\r\n    <div>\r\n      <a class=\"btn btn-primary\" [routerLink]=\"['/games/bricksmash']\">BrickSmash</a>\r\n      <a class=\"btn btn-secondary\" [routerLink]=\"['/games/tetris']\">Tetris</a>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\" >\r\n      <h3>High Scores</h3>\r\n\r\n<!--      <h1>BrickSmash</h1>-->\r\n      <p>BrickSmash: {{ user.games.bricksmash.highscore }}</p>\r\n\r\n<!--      <h1>Tetris</h1>-->\r\n      <p>Tetris: {{ user.games.tetris.highscore }}</p>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <h3>Friends</h3>\r\n<!--      <p>Coming soon!</p>-->\r\n      <table>\r\n        <tr *ngIf=\"user.friends.length == 0\">\r\n          <td style=\"font-style: italic\">Add some friends!</td>\r\n        </tr>\r\n        <tr *ngFor=\"let friend of user.friends\">\r\n          <td>\r\n            <a [routerLink]=\"['/profile', friend._id]\">{{ friend.username }}</a>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <h3>Feed</h3>\r\n      <table>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Comment</th>\r\n          <th>User</th>\r\n          <th></th>\r\n        </tr>\r\n        <tr *ngIf=\"user.comments.length == 0\">\r\n          <td style=\"font-style: italic\">'No Comment' :P</td>\r\n        </tr>\r\n        <tr *ngFor=\"let comment of user.comments\">\r\n          <td>{{ comment.date | date }}</td>\r\n          <td>{{ comment.body }}</td>\r\n          <td>{{ comment.user.username }}</td>\r\n          <td><button (click)=\"deleteComment(comment._id)\" >Delete</button></td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\r\nimport { Paddle } from \"../../../models/Paddle\";\r\nimport {KEY} from \"../../../models/constants\";\r\nimport {Ball} from \"../../../models/Ball\";\r\nimport {Brick} from \"../../../models/Brick\";\r\n\r\nimport { BricksmashService } from \"../../../services/games/bricksmash/bricksmash.service\";\r\nimport {UserData} from \"../../../models/UserData\";\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {GameService} from \"../../../services/games/game.service\";\r\nimport {User} from \"../../../models/User\";\r\n\r\n@Component({\r\n  selector: 'app-bricksmash',\r\n  templateUrl: './bricksmash.component.html',\r\n  styleUrls: ['./bricksmash.component.css']\r\n})\r\nexport class BricksmashComponent implements OnInit {\r\n  // Set User\r\n  user: UserData;\r\n\r\n  // Get reference to canvas\r\n  @ViewChild('brickSmashCanvas', { static: true })\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  ctx: CanvasRenderingContext2D;\r\n\r\n  highscoreUserArray: UserData[];\r\n\r\n  requestId: any;\r\n  paddle: Paddle;\r\n  ball: Ball;\r\n  bricks: Brick[];\r\n  score: number;\r\n  lives: number;\r\n  paused: boolean;\r\n  gameStarted: boolean;\r\n  highScore: number;\r\n  pauseButtonText: string;\r\n  pauseButtonClass: string;\r\n  moves = {\r\n    [KEY.RIGHT]: (paddle: Paddle) => {\r\n      paddle.rightPressed = true;\r\n      paddle.leftPressed = false;\r\n    },\r\n    [KEY.LEFT]: (paddle: Paddle) => {\r\n      paddle.leftPressed = true;\r\n      paddle.rightPressed = false;\r\n    }\r\n  };\r\n\r\n  @HostListener('window: keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent){\r\n    if (this.gameStarted){\r\n      if (this.moves[event.code]){\r\n        event.preventDefault();\r\n        this.moves[event.code](this.paddle);\r\n      }\r\n\r\n      // console.log(event.code);\r\n\r\n      this.ctx.clearRect(0,0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n      // this.paddle.draw();\r\n      this.paddle.update()\r\n    }\r\n  }\r\n\r\n  // hacky 'debugging' for x/y coordinates\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onMouseUp(e){\r\n    console.log(e);\r\n  }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n    onMouseMove(e: MouseEvent){\r\n    if (this.gameStarted) {\r\n      // e.preventDefault();\r\n\r\n      // TODO: resolve mouse movement with page layout\r\n\r\n      let relativeX = e.x - this.ctx.canvas.offsetLeft;\r\n      if (relativeX > 0 && relativeX < this.ctx.canvas.width) {\r\n        this.paddle.x = relativeX - this.paddle.width / 2;\r\n      }\r\n\r\n      // let relativeX = e.x - this.ctx.canvas.width;\r\n      // if (relativeX > 0 && relativeX < this.ctx.canvas.width) {\r\n      //   this.paddle.x = relativeX - this.paddle.width / 2;\r\n      // }\r\n\r\n      // let relativeX = e.clientX - this.ctx.canvas.offsetLeft;\r\n      // if (relativeX > 0 && relativeX < this.ctx.canvas.width) {\r\n      //   this.paddle.x = relativeX - this.paddle.width / 2;\r\n      // }\r\n      // console.log(e);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private bricksmashService: BricksmashService,\r\n    private authService: AuthService,\r\n    private gameService: GameService\r\n              ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // TODO: use local storage?\r\n    this.authService.getProfile().subscribe(profile => {\r\n      console.log(profile);\r\n      this.user = profile.user;\r\n\r\n      // set highscore on page load\r\n      // this.highScore = this.user.bricksmashscore;\r\n      this.highScore = this.user.games.bricksmash.highscore;\r\n    },\r\n    err => {\r\n    console.log(err);\r\n    return false;\r\n    }\r\n    );\r\n\r\n    this.gameService.getHighScores('bricksmash').subscribe( resArray => {\r\n      console.log(resArray);\r\n      this.highscoreUserArray = resArray;\r\n    });\r\n\r\n    this.initBrickSmash();\r\n   // this.resetGame();\r\n    // this.x = this.ctx.canvas.width/2;\r\n    // this.y = this.ctx.canvas.height-30;\r\n  }\r\n\r\n  initBrickSmash(): void{\r\n    // Get the 2D context that we draw on\r\n    this.ctx = this.canvas.nativeElement.getContext('2d');\r\n\r\n    this.resetGame();\r\n    // this.initBricks();\r\n\r\n    // Calculate size of canvas from constants..?\r\n  }\r\n\r\n  // initialize objects for game (maybe move to init method to draw canvas before start?\r\n  startGame(): void{\r\n    this.resetGame();\r\n    this.paddle = new Paddle(this.ctx);\r\n    this.ball = new Ball(this.ctx);\r\n    this.bricks = this.initBricks();\r\n    // this.drawBricks();\r\n\r\n    // if game already running, canc\r\n    if (this.requestId){\r\n      cancelAnimationFrame(this.requestId);\r\n    }\r\n    this.gameStarted = true;\r\n\r\n    this.animate();\r\n\r\n\r\n    // if (this.paused){\r\n    //   this.paused = false;\r\n    //   this.animate();\r\n    // }\r\n    //\r\n    // else {\r\n    //   this.paddle = new Paddle(this.ctx);\r\n    //   this.ball = new Ball(this.ctx);\r\n    //   this.bricks = this.initBricks();\r\n    //   // this.drawBricks();\r\n    //\r\n    //   // if game already running, canc\r\n    //   if (this.requestId){\r\n    //     cancelAnimationFrame(this.requestId);\r\n    //   }\r\n    //   this.gameStarted = true;\r\n    //\r\n    //   this.animate();\r\n    //\r\n    // }\r\n\r\n\r\n    // console.log(\"now were cooking with oil!\");\r\n  }\r\n\r\n  animate(): void {\r\n    if (this.paused){\r\n      return;\r\n    }\r\n\r\n    this.updateBall();\r\n\r\n    if (this.gameStarted === false){\r\n      return;\r\n    }\r\n\r\n    this.updateBricks();\r\n\r\n    this.drawBrickSmash();\r\n\r\n    // requestAnimationFrame(this.animate.bind(this));\r\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  pause(): void{\r\n    this.paused = !this.paused;\r\n\r\n    if (this.paused){\r\n      this.pauseButtonText = 'Play';\r\n      this.pauseButtonClass = 'btn btn-success';\r\n      cancelAnimationFrame(this.requestId);\r\n      return;\r\n    }\r\n\r\n    else {\r\n      this.pauseButtonText = 'Pause';\r\n      this.pauseButtonClass = 'btn btn-warning';\r\n      this.animate();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  resetGame(): void{\r\n    this.score = 0;\r\n\r\n    // // Development purposes\r\n    // this.lives = 0;\r\n    this.lives = 3;\r\n\r\n    this.paused = false;\r\n\r\n    this.pauseButtonText = 'Pause';\r\n    this.pauseButtonClass = 'btn btn-warning';\r\n\r\n    // this.highScore = this.user.bricksmashscore;\r\n\r\n    // if (!this.highScore){\r\n    //   this.highScore = 0;\r\n    // }\r\n  }\r\n\r\n  // Reset game\r\n  respawn(): void {\r\n    this.ball.spawn();\r\n    // this.paddle = new Paddle(this.ctx);\r\n    this.paddle.spawn();\r\n    // this.paused = true;\r\n    this.pause();\r\n    cancelAnimationFrame(this.requestId);\r\n    // this.bricks = this.initBricks();\r\n  }\r\n\r\n  updateBall(): void{\r\n    // this.bricksmashService.screenCollision(this.ball, this.ctx);\r\n    // this.bricksmashService.paddleCollision(this.ball, this.paddle, this.ctx);\r\n\r\n    this.bricksmashService.paddleCollision(this.ball, this.paddle, this.ctx);\r\n    // update lives\r\n    if (this.bricksmashService.screenCollision(this.ball, this.ctx)){\r\n      this.lives--;\r\n      console.log('lives: ' + this.lives);\r\n      if (this.lives === -1){\r\n        this.lives = 0;\r\n        this.gameOver();\r\n        // return;\r\n      }\r\n      else{\r\n        this.respawn();\r\n        // return;\r\n      }\r\n      // return;\r\n    }\r\n  }\r\n\r\n  updateBricks(): void{\r\n    for (let i = 0; i < this.bricks.length; i++){\r\n      let tmpBrick = this.bricks[i];\r\n      if (this.bricksmashService.brickCollision(tmpBrick, this.ball)){\r\n        this.score += 1;\r\n        tmpBrick.status = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  drawBrickSmash(): void {\r\n    this.ctx.clearRect(0,0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.paddle.draw();\r\n    this.ball.draw();\r\n    this.drawBricks();\r\n  }\r\n\r\n  initBricks(): Brick[]{\r\n    let tmpBricks = [];\r\n\r\n    let brickRowCount = 3;\r\n    let brickColumnCount = 5;\r\n\r\n    for (let c = 0; c < brickColumnCount; c++){\r\n      // let tmpBricks = [c];\r\n      for (let r = 0; r < brickRowCount; r++){\r\n\r\n        const brickWidth = 75;\r\n        const brickHeight = 20;\r\n        const brickPadding = 10;\r\n        const brickOffsetTop = 30;\r\n        const brickOffsetLeft = 30;\r\n\r\n        let brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\r\n        let brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;\r\n\r\n        let newBrick = new Brick(this.ctx, brickX, brickY);\r\n        tmpBricks.push(newBrick);\r\n        // tmpBricks.push(new Brick(this.ctx, brickX, brickY));\r\n\r\n      }\r\n    }\r\n    return tmpBricks;\r\n  }\r\n\r\n  drawBricks(): void{\r\n    this.bricks.forEach((brick) => {\r\n      if (brick.status === 1){\r\n        brick.draw();\r\n      }\r\n    });\r\n  }\r\n\r\n  gameOver(): void {\r\n    this.gameStarted = false;\r\n    cancelAnimationFrame(this.requestId);\r\n\r\n    // update highscore\r\n    if (this.score > this.highScore){\r\n      this.gameService.updateScore('bricksmash', this.score).subscribe( res => {\r\n        // console.log(res);\r\n        if (res.success === true){\r\n          // TODO: add this.authService.updateUserData(res.user) ?\r\n          // this.highScore = res.user.bricksmashscore;\r\n          this.highScore = res.user.games.bricksmash.highscore;\r\n        }\r\n      });\r\n    }\r\n    // this.highScore = this.score > this.highScore ? this.score : this.highScore;\r\n\r\n\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fillRect(0, this.ctx.canvas.height/3, this.ctx.canvas.width, this.ctx.canvas.height/3);\r\n    // this.ctx.fillRect(1, 3, 8, 1.2);\r\n    this.ctx.font = '25px \"Press Start 2P\", Arial';\r\n    // this.ctx.font = '50px Arial';\r\n    // this.ctx.font = '1px Arial';\r\n    this.ctx.fillStyle = 'red';\r\n    this.ctx.fillText('GAME OVER', this.ctx.canvas.width/5, this.ctx.canvas.height/2);\r\n    // this.ctx.fillText('GAME OVER', 1.8, 4);\r\n    console.log('Game over');\r\n    // return;\r\n  }\r\n}\r\n","<div class=\"grid\">\r\n\r\n  <div class=\"left-column\">\r\n<!--    <p>test</p>-->\r\n    <h3>High Scores</h3>\r\n\r\n    <table>\r\n      <tr>\r\n        <th>User</th>\r\n        <th>Score</th>\r\n      </tr>\r\n      <tr *ngFor=\"let user of this.highscoreUserArray\">\r\n<!--        TODO: why are these types messed up? -->\r\n        <td>\r\n          <a [routerLink]=\"['/profile', user._id]\">{{ user.username }}</a>\r\n        </td>\r\n        <td>{{ user.games.bricksmash.highscore }}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n\r\n  <canvas #brickSmashCanvas class=\"gameCanvas\" width=\"480\" height=\"320\"></canvas>\r\n<!--  <canvas #brickSmashCanvas class=\"gameCanvas\" width=\"720\" height=\"480\"></canvas>-->\r\n\r\n  <div class=\"right-column\">\r\n\r\n    <div class=\"wrapper scoreboard\">\r\n      <h1>Bricksmash</h1>\r\n      <p>Score: {{ score }}</p>\r\n      <p>Lives: {{ lives }}</p>\r\n      <p>High Score: {{ highScore }}</p>\r\n    </div>\r\n\r\n\r\n    <div class=\"wrapper\">\r\n      <input\r\n        class=\"btn btn-success\"\r\n        type=\"button\"\r\n        value=\"Play\"\r\n        id=\"startButton\"\r\n        (click)=\"startGame()\"\r\n        *ngIf=\"!gameStarted\"\r\n      >\r\n      <input\r\n        class=\"{{ pauseButtonClass }}\"\r\n        type=\"button\"\r\n        value=\"{{ pauseButtonText }}\"\r\n        id=\"pauseButton\"\r\n        (click)=\"pause()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n      <input\r\n        class=\"btn btn-danger\"\r\n        type=\"button\"\r\n        value=\"Quit\"\r\n        id=\"stopButton\"\r\n        (click)=\"gameOver()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\r\nimport {BLOCK_SIZE, COLORS, COLS, KEY, LEVEL, LINES_PER_LEVEL, POINTS, ROWS} from \"../../../models/constants\";\r\nimport {IPiece, Piece} from \"../../../models/Piece\";\r\nimport {TetrisService} from \"../../../services/games/tetris/tetris.service\";\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {GameService} from \"../../../services/games/game.service\";\r\nimport {UserData} from \"../../../models/UserData\";\r\n\r\n@Component({\r\n  selector: 'app-tetris',\r\n  templateUrl: './tetris.component.html',\r\n  styleUrls: ['./tetris.component.css']\r\n})\r\nexport class TetrisComponent implements OnInit {\r\n  // Set User\r\n  user: UserData;\r\n\r\n  // Get reference to canvas\r\n  @ViewChild('board', { static: true })\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  @ViewChild('next', { static: true })\r\n  canvasNext: ElementRef<HTMLCanvasElement>;\r\n\r\n  ctx: CanvasRenderingContext2D;\r\n  ctxNext: CanvasRenderingContext2D;\r\n  points: number;\r\n  lines: number;\r\n  level: number;\r\n  board: number[][];\r\n  piece: Piece;\r\n  next: Piece;\r\n  requestId: number;\r\n  highScore: number;\r\n  paused: boolean;\r\n  gameStarted: boolean;\r\n  pauseButtonText: string;\r\n  pauseButtonClass: string;\r\n  highscoreUserArray: UserData[];\r\n  // time: Time;\r\n  time: {\r\n    start: number;\r\n    elapsed: number;\r\n    level: number\r\n  };\r\n  moves = {\r\n    [KEY.LEFT]: (p: IPiece): IPiece => ({ ...p, x: p.x - 1 }),\r\n    [KEY.RIGHT]: (p: IPiece): IPiece => ({ ...p, x: p.x + 1 }),\r\n    [KEY.DOWN]: (p: IPiece): IPiece => ({ ...p, y: p.y + 1 }),\r\n    [KEY.SPACE]: (p: IPiece): IPiece => ({ ...p, y: p.y + 1 }),\r\n    [KEY.UP]: (p: IPiece): IPiece => this.tetrisService.rotate(p)\r\n  }\r\n\r\n  @HostListener('window: keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent){\r\n    if (event.code === KEY.ESC){\r\n      this.gameOver();\r\n    }\r\n    //event.keyCode is deprecated\r\n    if (this.moves[event.code]){\r\n      // If the key exists in our moves stop the event from bubbling\r\n      event.preventDefault();\r\n      // Get the next state of the piece\r\n      let p = this.moves[event.code](this.piece);\r\n\r\n      // console.log('p: ');\r\n      // console.log(p);\r\n      // console.log('this');\r\n      // console.log(this.piece);\r\n\r\n      // Hard drop\r\n      if (event.code === KEY.SPACE){\r\n        while (this.tetrisService.valid(p, this.board)){\r\n          this.points += POINTS.HARD_DROP; // Points for every drop\r\n          this.piece.move(p);\r\n          p = this.moves[event.code](this.piece);\r\n        }\r\n      }\r\n\r\n      else if (this.tetrisService.valid(p, this.board)){\r\n        // Move the piece\r\n        this.piece.move(p);\r\n        if (event.code === KEY.DOWN){\r\n          this.points += POINTS.SOFT_DROP; // Points if we move down\r\n        }\r\n      }\r\n\r\n      // Clear the old position before drawing\r\n      this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n      // Draw the new position\r\n      this.piece.draw();\r\n    }\r\n  }\r\n\r\n\r\n  constructor(\r\n    private tetrisService: TetrisService,\r\n    private authService: AuthService,\r\n    private gameService: GameService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getProfile().subscribe(profile => {\r\n        console.log(profile);\r\n        this.user = profile.user;\r\n\r\n        // set highscore on page load\r\n        this.highScore = this.user.games.tetris.highscore;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      });\r\n\r\n    this.gameService.getHighScores('tetris').subscribe( resArray => {\r\n      console.log(resArray);\r\n      this.highscoreUserArray = resArray;\r\n    });\r\n\r\n    this.initBoard();\r\n    this.initNext();\r\n    this.resetGame();\r\n    // this.highScore = 0;\r\n\r\n    // Scale so we don't need to give size on every draw\r\n    this.ctx.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n  }\r\n\r\n  initBoard() {\r\n    // Get the 2D context that we draw on\r\n    this.ctx = this.canvas.nativeElement.getContext('2d');\r\n\r\n    // Calculate size of canvas from constants.\r\n    this.ctx.canvas.width = COLS * BLOCK_SIZE;\r\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE;\r\n  }\r\n\r\n  initNext(): void{\r\n    this.ctxNext = this.canvasNext.nativeElement.getContext('2d');\r\n\r\n    // Calculate size of canvas from constants.\r\n    // The + 2 is to allow for space to add the drop shadow to\r\n    this.ctxNext.canvas.width = 4 * BLOCK_SIZE + 2;\r\n    this.ctxNext.canvas.height = 4 * BLOCK_SIZE;\r\n\r\n    this.ctxNext.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n  }\r\n\r\n  drawBoard(): void{\r\n    this.board.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0){\r\n          this.ctx.fillStyle = COLORS[value];\r\n          this.ctx.fillRect(x, y, 1, 1);\r\n          // this.add3D(x, y, value);\r\n        }\r\n      });\r\n    });\r\n    // this.addOutlines();\r\n  }\r\n\r\n  drawPiece(): void{\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.piece.draw();\r\n    this.drawBoard();\r\n\r\n  }\r\n\r\n  play(){\r\n    this.gameStarted = true;\r\n    this.resetGame();\r\n    this.next = new Piece(this.ctx);\r\n    this.piece = new Piece(this.ctx);\r\n    this.next.drawNext(this.ctxNext);\r\n\r\n    // console.table(this.board);\r\n\r\n    // set current time\r\n    this.time.start = performance.now();\r\n\r\n    // If we have an old game running a game, then cancel the old\r\n    if (this.requestId){\r\n      cancelAnimationFrame(this.requestId);\r\n    }\r\n\r\n    this.animate();\r\n  }\r\n\r\n  animate(now = 0): void {\r\n    // Update elapsed time\r\n    this.time.elapsed = now - this.time.start;\r\n\r\n    // If elapsed time has passed time for current level\r\n    if (this.time.elapsed > this.time.level) {\r\n      // Reset start time\r\n      this.time.start = now;\r\n      this. drop();\r\n      if (!this.drop()) {\r\n        this.gameOver();\r\n        return;\r\n      }\r\n    }\r\n    this.drawPiece();\r\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  drop(): boolean {\r\n    // set p as if down key was pressed\r\n    let p = this.moves[KEY.DOWN](this.piece);\r\n\r\n    if (this.tetrisService.valid(p, this.board)){\r\n      // Move the piece\r\n      this.piece.move(p);\r\n    }\r\n\r\n\r\n    else {\r\n      // add piece to gameboard to lock it in\r\n      this.freeze();\r\n\r\n      //\r\n      this.clearLines();\r\n      // check if the piece is at the top of the board\r\n      if (this.piece.y === 0){\r\n        // Game over\r\n        return false;\r\n      }\r\n\r\n      // this.piece = new Piece(this.ctx);\r\n      this.piece = this.next;\r\n      this.next = new Piece(this.ctx);\r\n      this.next.drawNext(this.ctxNext);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  freeze(): void{\r\n    this.piece.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0){\r\n          this.board[y + this.piece.y][x + this.piece.x] = value;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  clearLines(): void {\r\n    let lines = 0;\r\n    this.board.forEach((row, y) => {\r\n\r\n      // If every value is greater than 0\r\n      if (row.every(value => value !== 0)) {\r\n        lines++;\r\n\r\n        // Remove the row\r\n        this.board.splice(y, 1);\r\n\r\n        // Add a zero filled array at the top, causing the board to 'move down'\r\n        this.board.unshift(Array(COLS).fill(0));\r\n      }\r\n    });\r\n\r\n    if (lines > 0) {\r\n      // Calculate points form cleared lines and level\r\n      this.points += this.tetrisService.getLinesClearedPoints(lines, this.level);\r\n      this.lines += lines;\r\n\r\n      // If we have reached the lines per level\r\n      if (this.lines >= LINES_PER_LEVEL) {\r\n\r\n        // Goto next level\r\n        this.level++;\r\n\r\n        // Remove lines so we start working for the next level\r\n        this.lines -= LINES_PER_LEVEL;\r\n\r\n        // Increase speed of game\r\n        this.time.level = LEVEL[this.level];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Initialize game\r\n  resetGame(): void {\r\n    this.points = 0;\r\n    this.lines = 0;\r\n    this.level = 0;\r\n    this.board = this.tetrisService.getEmptyBoard();\r\n    this.time = { start: 0, elapsed: 0, level: LEVEL[this.level] };\r\n    this.paused = false;\r\n\r\n    this.pauseButtonText = 'Pause';\r\n    this.pauseButtonClass = 'btn btn-warning';\r\n    // this.addOutlines();\r\n  }\r\n\r\n  // getEmptyBoard(): number[][] {\r\n  //   return Array.from({ length: ROWS }, () => Array(COLS).fill(0));\r\n  // }\r\n  gameOver(): void {\r\n    this.gameStarted = false;\r\n    cancelAnimationFrame(this.requestId);\r\n\r\n    // update highscore\r\n    if (this.points > this.highScore){\r\n      this.gameService.updateScore('tetris', this.points).subscribe( res => {\r\n        // console.log(res);\r\n        if (res.success === true){\r\n          this.highScore = res.user.games.tetris.highscore;\r\n        }\r\n      });\r\n    }\r\n    // this.highScore = this.points > this.highScore ? this.points : this.highScore;\r\n\r\n    this.highScore = this.points > this.highScore ? this.points : this.highScore;\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fillRect(1, 3, 8, 1.2);\r\n    this.ctx.font = '1px Arial';\r\n    this.ctx.fillStyle = 'red';\r\n    this.ctx.fillText('GAME OVER', 1.8, 4);\r\n  }\r\n\r\n  pause(): void {\r\n    this.paused = !this.paused;\r\n\r\n    if (this.paused) {\r\n      this.pauseButtonText = 'Play';\r\n      this.pauseButtonClass = 'btn btn-success';\r\n      cancelAnimationFrame(this.requestId);\r\n      return;\r\n    } else {\r\n      this.pauseButtonText = 'Pause';\r\n      this.pauseButtonClass = 'btn btn-warning';\r\n      this.animate();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"grid\">\r\n  <div class=\"left-column\">\r\n    <h3>High Scores</h3>\r\n\r\n    <table>\r\n      <tr>\r\n        <th>User</th>\r\n        <th>Score</th>\r\n      </tr>\r\n      <tr *ngFor=\"let user of this.highscoreUserArray\">\r\n        <!--        TODO: why are these types messed up? -->\r\n        <td>\r\n          <a [routerLink]=\"['/profile', user._id]\">{{ user.username }}</a>\r\n        </td>\r\n        <td>{{ user.games.bricksmash.highscore }}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <canvas id=\"board\" #board class=\"game-board\" ></canvas>\r\n  <div class=\"right-column\">\r\n    <div>\r\n      <h1>Tetris</h1>\r\n      <p>Score: {{ points }}</p>\r\n      <p>Lines: {{ lines }}</p>\r\n      <p>Level: {{ level }}</p>\r\n      <p>High Score:</p>\r\n      <p>{{highScore }}</p>\r\n      <p>Next Block:</p>\r\n      <canvas #next class=\"next\"></canvas>\r\n    </div>\r\n    <div class=\"button-container\">\r\n<!--      <button-->\r\n<!--        (click)=\"play()\"-->\r\n<!--        class=\"play-button\"-->\r\n<!--      >Play</button>-->\r\n\r\n      <input\r\n        class=\"btn btn-success\"\r\n        type=\"button\"\r\n        value=\"Play\"\r\n        id=\"startButton\"\r\n        (click)=\"play()\"\r\n        *ngIf=\"!gameStarted\"\r\n      >\r\n      <input\r\n        class=\"{{ pauseButtonClass }}\"\r\n        type=\"button\"\r\n        value=\"{{ pauseButtonText }}\"\r\n        id=\"pauseButton\"\r\n        (click)=\"pause()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n      <input\r\n        class=\"btn btn-danger\"\r\n        type=\"button\"\r\n        value=\"Quit\"\r\n        id=\"stopButton\"\r\n        (click)=\"gameOver()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron text-center\">\r\n  <h1>The Arcade Library</h1>\r\n  <p class=\"lead\">Welcome to The Arcade Library!! Low-tech fun in a high-tech world :)</p>\r\n  <div>\r\n    <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-4\" >\r\n    <h3>Express Backend</h3>\r\n    <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3>Angular-CLI</h3>\r\n    <p>Angular-CLI to generate components, services and more.  Local dev server and easy compilation</p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3>JWT Tokens</h3>\r\n    <p>Full featured authentication using JSON web tokens.  Login and store user data</p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router,\r\n    private flashMessage:FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLoginSubmit(){\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if(data.success){\r\n        this.authService.storeUserData(data.token, data.user);\r\n        this.flashMessage.show('You are now logged in!', {\r\n          cssClass: 'alert-success',\r\n          timeout: 5000\r\n        });\r\n        this.router.navigate(['dashboard']);\r\n      }\r\n      else{\r\n        this.flashMessage.show(data.msg, {\r\n          cssClass: 'alert-danger',\r\n          timeout: 5000\r\n        });\r\n        this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<h2 class=\"page-header\">Login</h2>\r\n<form (submit)=\"onLoginSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\r\n  </div>\r\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\nimport {UserData} from \"../../models/UserData\";\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  user: UserData;\r\n  id: string;\r\n\r\n  constructor(\r\n    public authService:AuthService,\r\n    private router:Router,\r\n    private flashMessage:FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // double check if anyone is logged in\r\n    if (JSON.parse(localStorage.getItem('user'))){\r\n      this.id = JSON.parse(localStorage.getItem('user')).id;\r\n    }\r\n    // console.log(this.user._id);\r\n    // console.log(this.id);\r\n\r\n  }\r\n\r\n  getLoggedInIdAndRoute(): void{\r\n    this.id = JSON.parse(localStorage.getItem('user')).id;\r\n    this.router.navigate((['/profile', this.id]));\r\n  }\r\n\r\n  onLogoutClick(){\r\n    this.authService.logout();\r\n    // authService.logout();\r\n    this.flashMessage.show('You have been logged out!',{\r\n      cssClass: 'alert-success',\r\n      timeout:3000\r\n    });\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"#\">The Arcade Library</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n    <ul class=\"navbar-nav mr-auto navbar-left\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/search']\" >Search <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav navbar-right\">\r\n      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/dashboard']\" >Dashboard <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n<!--      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">-->\r\n<!--        <a class=\"nav-link\" [routerLink]=\"['/profile', id]\" >Profile <span class=\"sr-only\">(current)</span></a>-->\r\n<!--      </li>-->\r\n      <!--      TODO: figure out why'hover' action is different after removing routerLink :o   -->\r\n<!--      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">-->\r\n<!--        <a class=\"nav-link\"  (click)=\"getLoggedInIdAndRoute()\" >Profile <span class=\"sr-only\">(current)</span></a>-->\r\n<!--      </li>-->\r\n      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">\r\n        <a class=\"nav-link\"  [routerLink]=\"['/profile', authService.getLocalId()]\" >Profile <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li  class=\"nav-item active\" *ngIf=\"!authService.loggedIn()\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/login']\" >Login <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li  class=\"nav-item active\" *ngIf=\"!authService.loggedIn()\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/register']\" >Register <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li  class=\"nav-item\" *ngIf=\"authService.loggedIn()\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"onLogoutClick()\"  >Logout</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport {ActivatedRoute, Router, ParamMap, RouterEvent, NavigationEnd} from \"@angular/router\";\r\nimport {UserData} from \"../../models/UserData\";\r\nimport {CommentsService} from \"../../services/comments/comments.service\";\r\nimport {FriendsService} from \"../../services/friends/friends.service\";\r\nimport {filter, takeUntil} from \"rxjs/operators\";\r\nimport {Subject} from \"rxjs\";\r\nimport {Friend} from \"../../models/Friend\";\r\nimport {ProfileService} from \"../../services/profile/profile.service\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user:UserData;\r\n  profile:UserData;\r\n  comment: string;\r\n  editingProfile: boolean;\r\n  newProfile: string;\r\n\r\n  rows: string;\r\n\r\n  id: string;\r\n\r\n  // TODO: What is this..?\r\n  public destroyed = new Subject<any>();\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router,\r\n    private commentsService: CommentsService,\r\n    private route: ActivatedRoute,\r\n    private friendsService: FriendsService,\r\n    private profileService: ProfileService\r\n  ) {  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n\r\n    // set profile variables?\r\n    this.editingProfile = false;\r\n\r\n\r\n    // re-fetch data on navigation\r\n    this.router.events.pipe(\r\n      filter((event: RouterEvent) => event instanceof NavigationEnd),\r\n      takeUntil(this.destroyed)\r\n    ).subscribe(() => {\r\n        this.fetchData();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  fetchData(): void{\r\n    // console.log(this.route.snapshot.paramMap.get('id'));\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    // console.log(this.id);\r\n\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    // TODO: make get profile by id method on authservice?\r\n    this.authService.getUserById(this.id).subscribe(profile => {\r\n        this.profile = profile.user;\r\n\r\n        this.newProfile = this.profile.profile;\r\n\r\n        // grab rows for profile\r\n        let rowCount = 1;\r\n        let profileString = this.newProfile;\r\n\r\n        for(let i = 0; i < profileString.length; i++){\r\n          let char = profileString[i];\r\n\r\n          if (char === '\\n'){\r\n            rowCount++;\r\n          }\r\n        }\r\n\r\n        this.rows = String(rowCount);\r\n        // console.log(this.rows);\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  addComment(): void{\r\n    // TODO: implement browsing to other profile pages and adding comments to them\r\n\r\n    // TODO: refactor test code\r\n    this.commentsService.addComment(this.id, this.comment).subscribe( res => {\r\n      if (res.success === true){\r\n        // no user update needed; comment added to another user\r\n\r\n        // TODO: why did I do this? is it necessary?\r\n        // this.user = res.user;\r\n      }\r\n    })\r\n\r\n    // console.log(this.comment);\r\n\r\n    // reset input field\r\n    this.comment = '';\r\n  }\r\n\r\n  addFriend(): void{\r\n    this.friendsService.addFriend(this.id).subscribe(res => {\r\n      if (res.success === true){\r\n        // update user data\r\n        this.authService.updateUserData(res.user);\r\n        this.user = res.user;\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteFriend(): void{\r\n    this.friendsService.deleteFriend(this.id).subscribe(res => {\r\n      if (res.success === true){\r\n        // update user data\r\n        this.authService.updateUserData(res.user);\r\n        this.user = res.user;\r\n      }\r\n    })\r\n  }\r\n\r\n  isMyProfile(): boolean{\r\n    let self: string = String(this.user._id);\r\n    let profileId: string = this.id;\r\n\r\n    if (self === profileId){\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isFriend(): boolean{\r\n    // console.log(this.user);\r\n\r\n    let profileId: string = this.id;\r\n    let friendsArr: Friend[] = this.user.friends;\r\n\r\n    for (let i = 0; i < friendsArr.length; i++){\r\n      // console.log(friendsArr[i]);\r\n      let friendId: string = String(friendsArr[i]);\r\n      if (friendId === profileId) return true;\r\n    }\r\n\r\n    return false;\r\n    //\r\n    // let friend: Friend = this.user.friends.find((tmpFriend) => {\r\n    //   return tmpFriend._id === friendId;\r\n    // });\r\n    //\r\n    // if (friend) return true\r\n    // else return false;\r\n\r\n  }\r\n\r\n  editProfile(): void{\r\n    this.editingProfile = true;\r\n    // console.log(this.profile.profile);\r\n  }\r\n\r\n  submitEditProfile(): void{\r\n    // console.log(this.newProfile);\r\n\r\n    this.profileService.editProfile(this.newProfile).subscribe( res => {\r\n      if (res.success === true){\r\n        this.authService.updateUserData(res.user);\r\n        this.user = res.user;\r\n        this.profile = res.user;\r\n      }\r\n    })\r\n\r\n    this.editingProfile = false;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"profile\">\r\n  <h2 class=\"page-header\">{{profile.name}}</h2>\r\n  <ul class=\"list-group\">\r\n    <li class=\"list-group-item\">Username: {{profile.username}}</li>\r\n    <li class=\"list-group-item\">Email: {{profile.email}}</li>\r\n    <li class=\"list-group-item\">\r\n      <h3>High Scores</h3>\r\n\r\n      <!--      <h1>BrickSmash</h1>-->\r\n      <p>BrickSmash: {{ profile.games.bricksmash.highscore }}</p>\r\n\r\n      <!--      <h1>Tetris</h1>-->\r\n      <p>Tetris: {{ profile.games.tetris.highscore }}</p>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n      <h3>About Me</h3>\r\n      <p *ngIf=\"!editingProfile\" >{{ profile.profile }}</p>\r\n      <ng-template [ngIf]=\"isMyProfile()\">\r\n        <button *ngIf=\"!editingProfile; else elseBlock\" (click)=\"editProfile()\">Edit Profile</button>\r\n        <ng-template #elseBlock>\r\n          <form (ngSubmit)=\"submitEditProfile()\">\r\n<!--            <input-->\r\n<!--              type=\"text\"-->\r\n<!--              name=\"newProfile\"-->\r\n<!--              [(ngModel)]=\"newProfile\"-->\r\n<!--            >-->\r\n            <textarea\r\n              rows=\"{{ this.rows }}\"\r\n              name=\"newProfile\"\r\n              [(ngModel)]=\"newProfile\"\r\n            ></textarea>\r\n            <br>\r\n            <button>Submit</button>\r\n          </form>\r\n        </ng-template>\r\n      </ng-template>\r\n    </li>\r\n  </ul>\r\n\r\n  <form *ngIf=\"!isMyProfile()\"  (ngSubmit)=\"addComment()\">\r\n    <label>Comment:</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"comment\"\r\n      [(ngModel)]=\"comment\"\r\n    >\r\n    <button  >Submit</button>\r\n  </form>\r\n<!--  TODO: Why is isFriend() run 4 times per call-->\r\n  <button *ngIf=\"!isFriend() && !isMyProfile()\" (click)=\"addFriend()\">Add to Friends!</button>\r\n  <button *ngIf=\"isFriend() && !isMyProfile()\" (click)=\"deleteFriend()\">Remove Friend</button>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {  ValidateService } from \"../../services/validate.service\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  name: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private flashMessage:FlashMessagesService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegisterSubmit(){\r\n    const user = {\r\n      name: this.name,\r\n      username: this.username,\r\n      email: this.email,\r\n      password: this.password\r\n    }\r\n\r\n    // Required Fields\r\n    if (!this.validateService.validateRegister(user)){\r\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Validate email\r\n    if (!this.validateService.validateEmail(user.email)){\r\n      this.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Register User\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if(data.success){\r\n        this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else {\r\n        this.flashMessage.show('Something went wrong :( ', {cssClass: 'alert-danger', timeout: 3000});\r\n        this.router.navigate(['/register']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h2 class=\"page-header\">Register</h2>\r\n<form (submit)=\"onRegisterSubmit()\" >\r\n  <div class=\"form-group\">\r\n    <label>Name</label>\r\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" >\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" >\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" >\r\n  </div>\r\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" >\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SearchService} from \"../../services/search/search.service\";\r\nimport {UserData} from \"../../models/UserData\";\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  searchTerm: string;\r\n  type: string;\r\n  returnedUsers: UserData[];\r\n\r\n  constructor(\r\n    private searchService: SearchService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // set type to all to match 'chekced'\r\n    this.type = 'all';\r\n\r\n    // initialize search term\r\n    this.searchTerm = '';\r\n  }\r\n\r\n  submitSearch(): void {\r\n\r\n    // set search term to return all if blank\r\n    if (this.searchTerm.trim() === ''){\r\n      this.searchTerm = '.*';\r\n    }\r\n\r\n    this.searchService.searchUsers(this.searchTerm, this.type).subscribe( resArray => {\r\n      console.log(resArray);\r\n      this.returnedUsers = resArray;\r\n    });\r\n\r\n    // check if searchTerm was .* and reset to empty string\r\n    if (this.searchTerm === '.*'){\r\n      this.searchTerm = '';\r\n    }\r\n    // console.log(\"Search value:\" + this.searchValue);\r\n  }\r\n\r\n}\r\n","<div class=\"grid\">\r\n  <div class=\"searchContainer\">\r\n\r\n    <form (ngSubmit)=\"submitSearch()\">\r\n      <div class=\"searchBox\" >\r\n\r\n        <label>User Search:\r\n          <input\r\n            name=\"searchValue\"\r\n            [(ngModel)]=\"searchTerm\"\r\n            type=\"text\"/>\r\n        </label>\r\n\r\n        <button type=\"submit\">Search</button>\r\n\r\n      </div>\r\n\r\n      <div class=\"radioOptions\">\r\n        <div class=\"options\">\r\n          <label>Name\r\n            <input (click)=\"type='name'\" type=\"radio\" name=\"type\"  />\r\n          </label>\r\n        </div>\r\n        <div class=\"options\">\r\n          <label>Username\r\n            <input (click)=\"type='username'\" type=\"radio\" name=\"type\"  />\r\n          </label>\r\n        </div>\r\n        <div class=\"options\">\r\n          <label>All\r\n            <input (click)=\"type='all'\" type=\"radio\" name=\"type\" checked  />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n\r\n  <div class=\"resultsBox\">\r\n    <h3 *ngIf=\"returnedUsers\">Results</h3>\r\n    <table>\r\n      <thead *ngIf=\"returnedUsers\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Username</th>\r\n          <th>Bricksmash</th>\r\n          <th>Tetris</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of returnedUsers\">\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.games.bricksmash.highscore }}</td>\r\n          <td>{{ user.games.tetris.highscore }}</td>\r\n          <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n<!--    <table *ngFor=\"let user of returnedUsers\">-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Name</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Username</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Scores</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th></th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>************************************************</td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--      <tr *ngIf=\"!returnedUsers\">-->\r\n<!--&lt;!&ndash;        <td style=\"font-style: italic\">Awaiting input...</td>&ndash;&gt;-->\r\n<!--        <td style=\"font-style: italic\"></td>-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--        <th>Name</th>-->\r\n<!--        <th>Username</th>-->\r\n<!--        <th>Scores</th>-->\r\n<!--        <th></th>-->\r\n<!--&lt;!&ndash;        <td>{{ user.name }}</td>&ndash;&gt;-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--&lt;!&ndash;        <th>Username:</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>{{ user.username }}</td>&ndash;&gt;-->\r\n<!--        <td>{{ user.name }}</td>-->\r\n<!--        <td>{{ user.username }}</td>-->\r\n<!--        <td>Bricksmash: {{ user.games.bricksmash.highscore }}</td>-->\r\n<!--&lt;!&ndash;        <td>Tetris: {{ user.games.tetris.highscore }}</td>&ndash;&gt;-->\r\n<!--        <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--        <td></td>-->\r\n<!--        <td></td>-->\r\n<!--        <td>Tetris: {{ user.games.tetris.highscore }}</td>-->\r\n<!--      </tr>-->\r\n<!--      <th colspan=\"4\" >*****************************************************************</th>-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Bricksmash:</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>{{ user.games.bricksmash.highscore }}</td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Tetris:</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>{{ user.games.tetris.highscore }}</td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;&lt;!&ndash;        <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>&ndash;&gt;&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--    </table>-->\r\n  </div>\r\n</div>\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Router, CanActivate} from \"@angular/router\";\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router\r\n  ) {}\r\n\r\n  canActivate():boolean {\r\n    if (this.authService.loggedIn()){\r\n      return true;\r\n    }\r\n    else{\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","export class Ball {\r\n  x: any;\r\n  y: any;\r\n  velocity: {\r\n    x: number;\r\n    y: number\r\n  };\r\n  radius: any;\r\n  color: any;\r\n  mass: number;\r\n  lives: number;\r\n  score: number;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.spawn();\r\n  }\r\n\r\n  spawn(): void{\r\n    this.x = this.ctx.canvas.width/2;\r\n    this.y = this.ctx.canvas.height-30;\r\n    this.velocity = {\r\n      x: 2,\r\n      y: -2\r\n    };\r\n    // this.velocity = {\r\n    //   x: Math.random() * (5 - 2) + 2,\r\n    //   y: -Math.random() * (5 - 2) - 2\r\n    // };\r\n    this.radius = 10;\r\n    this.color = 'orange';\r\n    this.mass = 1;\r\n    // this.lives = 3;\r\n    // this.score = 0;\r\n  }\r\n\r\n  draw(): void{\r\n    // draw circle\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = this.color;\r\n    this.ctx.arc(this.x, this.y, this.radius,0, Math.PI*2);\r\n    this.ctx.fill();\r\n    this.ctx.closePath();\r\n\r\n\r\n    // this.ctx.beginPath();\r\n    // this.ctx.fillStyle = this.color;\r\n    // this.ctx.fill();\r\n    // this.ctx.arc(this.x, this.y, this.radius,0, Math.PI*2);\r\n    // this.ctx.closePath();\r\n  }\r\n\r\n  update(): void{\r\n    // if (this.score === bricks.length){\r\n    //\r\n    //   alert(\"YOU WIN, CONGRATULATIONS!!\");\r\n    //   document.location.reload();\r\n    // } else{\r\n    //   this.draw();\r\n    //\r\n    // }\r\n\r\n    // collision detection with screen\r\n    if (this.x - this.radius <= 0 || this.x + this.radius >= this.ctx.canvas.width){\r\n      this.velocity.x = -this.velocity.x;\r\n      // this.x = -this.x;\r\n    }\r\n\r\n    if (this.y - this.radius <= 0 || this.y + this.radius >= this.ctx.canvas.height){\r\n      this.velocity.y = -this.velocity.y;\r\n      // this.y = -this.y;\r\n    }\r\n\r\n    // // handle lives\r\n    // else if (this.y + this.velocity.y > this.ctx.canvas.height - this.radius){\r\n    //   if (this.x > paddle.paddleX && this.x < paddle.paddleX + paddle.paddleWidth && (this.y + this.velocity.y > this.ctx.canvas.height - this.radius - paddle.paddleHeight || this.y + this.velocity.y < this.radius + paddle.paddleHeight)){//if ball hits paddle, reverse direction\r\n    //     // adjust angle of ball coming off paddle by modifying x value\r\n    //     this.velocity.x = this.velocity.x * paddleCollision(this, paddle);\r\n    //\r\n    //     // reflect y velocity\r\n    //     this.velocity.y = -this.velocity.y;\r\n    //   }\r\n    //   else{\r\n    //     this.lives--;\r\n    //     if (this.lives == -1){ // updated logic from '!lives' to allow lives to hit 0 before game over is given\r\n    //       alert(\"GAME OVER\"); //if ball hits bottom of screen, alert GAME OVER\r\n    //       document.location.reload();\r\n    //     }\r\n    //     else{\r\n    //       this.x = canvas.width / 2;\r\n    //       this.y = canvas.height - 30;\r\n    //       this.velocity = {\r\n    //         x: Math.random() * (5-2) + 2,\r\n    //         y: -Math.random() * (5-2) - 2\r\n    //       };\r\n    //       paddle.paddleX = (canvas.width - paddle.paddleWidth) / 2;\r\n    //     }\r\n    //   }\r\n    // }\r\n    //\r\n    //\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n\r\n    this.draw();\r\n  }\r\n}\r\n","export class Brick {\r\n  x: any;\r\n  y: any;\r\n  status: any;\r\n  height: any;\r\n  width: any;\r\n  brickPadding: number;\r\n  brickOffsetTop: number;\r\n  brickOffsetLeft: number;\r\n  color: string;\r\n\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D,\r\n              x,\r\n              y) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.spawn();\r\n  }\r\n  //testingggg\r\n  // this.velocity = {\r\n  //   x: Math.random() * (5-2) + 2,\r\n  //   y: -Math.random() * (5-2) - 2\r\n  // };\r\n\r\n  private spawn(): void{\r\n    this.color = 'green';\r\n    this.status = 1;\r\n    this.height = 20;\r\n    this.width = 75;\r\n\r\n    this.brickPadding = 10;\r\n    this.brickOffsetTop = 30;\r\n    this.brickOffsetLeft = 30;\r\n  }\r\n\r\n  draw(): void{\r\n    this.ctx.beginPath();\r\n    this.ctx.rect(this.x, this.y, this.width, this.height);\r\n    this.ctx.fillStyle = this.color;\r\n    this.ctx.fill();\r\n    this.ctx.closePath();\r\n\r\n  }\r\n\r\n  update(): void{\r\n    if (this.status == 1){\r\n      this.draw();\r\n\r\n    }\r\n    // collisionDetection(this,ball);\r\n  }\r\n}\r\n","export class Paddle {\r\n  height: number;\r\n  width: number;\r\n  x: number;\r\n  velocity: { x: number; y: number };\r\n  rightPressed: boolean;\r\n  leftPressed: boolean;\r\n  color: string;\r\n\r\n  constructor(\r\n    private ctx: CanvasRenderingContext2D\r\n  ) {\r\n      this.spawn();\r\n  }\r\n\r\n  spawn(): void{\r\n    this.color = 'blue';\r\n\r\n    this.height = 10;\r\n    this.width = 75;\r\n    this.x = (this.ctx.canvas.width - this.width) / 2;\r\n\r\n    this.rightPressed = false;\r\n    this.leftPressed = false;\r\n\r\n    //testingggg\r\n    this.velocity = {\r\n      x: Math.random() * (5 - 2) + 2,\r\n      y: -Math.random() * (5 - 2) - 2\r\n    }\r\n  }\r\n\r\n  draw(): void{\r\n    this.ctx.fillStyle = this.color;\r\n    this.ctx.fillRect(this.x,this.ctx.canvas.height - this.height, this.width, this.height);\r\n    // this.ctx.rect(this.x,this.ctx.canvas.height - this.paddleHeight, this.paddleWidth, this.paddleHeight);\r\n\r\n\r\n    // this.ctx.beginPath();\r\n    // this.ctx.fill();\r\n    // this.ctx.closePath();\r\n  }\r\n\r\n  update(): void{\r\n    this.draw();\r\n\r\n    //detect whether the paddle is off the screen and move accordingly\r\n    if (this.rightPressed && this.x < this.ctx.canvas.width - this.width){\r\n      this.x += 7;\r\n    }\r\n\r\n    if (this.leftPressed && this.x > 0){\r\n      this.x -= 7;\r\n    }\r\n\r\n  }\r\n}\r\n","import {BLOCK_SIZE, COLORS, SHAPES} from \"./constants\";\r\n\r\nexport interface IPiece {\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape: number[][];\r\n}\r\n\r\nexport class Piece implements IPiece {\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape: number[][];\r\n  colorDarker: string;\r\n  colorLighter: string;\r\n\r\n  constructor(\r\n    private ctx: CanvasRenderingContext2D\r\n  ) {\r\n    this.spawn();\r\n  }\r\n\r\n  spawn(): void{\r\n    const typeId: number = this.randomizeTetrominoType(COLORS.length - 1);\r\n    // const colorId: number = this.randomizeTetrominoType(COLORS.length);\r\n    // const shapeId: number = this.randomizeTetrominoType(SHAPES.length);\r\n    this.color = COLORS[typeId];\r\n    this.shape = SHAPES[typeId]; //[[2, 0, 0], [2, 2, 2], [0, 0, 0]];\r\n\r\n    // Position where the shape spawns\r\n    this.x = 3;\r\n    this.y = 0;\r\n  }\r\n\r\n  draw(): void{\r\n    // removed scaling- was re-scaling on every draw..? :( (making the pieces bigger and bigger)\r\n    this.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0){\r\n          this.ctx.fillStyle = this.color;\r\n          const currentX = this.x + x;\r\n          const currentY = this.y + y;\r\n          this.ctx.fillRect(currentX, currentY, 1, 1);\r\n          // this.add3D(this.ctx, currentX, currentY);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  private add3D(ctx: CanvasRenderingContext2D, x: number, y: number): void {\r\n    // Darker Color\r\n    ctx.fillStyle = this.colorDarker;\r\n\r\n    // Vertical\r\n    ctx.fillRect(x + .9, y, .1, 1);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x, y + .9, 1, .1);\r\n\r\n    //Darker Color - Inner\r\n    // Vertical\r\n    ctx.fillRect(x + .65, y + .3, .05, .3);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x + .3, y + .6, .4, .05);\r\n\r\n    // Lighter Color - Outer\r\n    ctx.fillStyle = this.colorLighter;\r\n\r\n    // Lighter Color - Inner\r\n    // Vertical\r\n    ctx.fillRect(x + .3, y + .3, .05, .3);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x + .3, y + .3, .4, .05);\r\n\r\n    // Lighter Color - Outer\r\n    // Vertical\r\n    ctx.fillRect(x, y, .05, 1);\r\n    ctx.fillRect(x, y, .1, .95);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x, y, 1 , .05);\r\n    ctx.fillRect(x, y, .95, .1);\r\n  }\r\n\r\n  move(p: IPiece): void{\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    this.shape = p.shape;\r\n  }\r\n\r\n  randomizeTetrominoType(noOfTypes: number): number{\r\n    return Math.floor(Math.random() * noOfTypes + 1);\r\n    // return Math.floor(Math.random() * Math.floor(noOfTypes));\r\n  }\r\n\r\n  drawNext(ctxNext: CanvasRenderingContext2D): void {\r\n    ctxNext.clearRect(0, 0, ctxNext.canvas.width, ctxNext.canvas.height);\r\n    // this.shape.forEach((row, y) => {\r\n    //     row.forEach((value, x) => {\r\n    //         if (value > 0) {\r\n    //             this.addNextShadow(ctxNext, x, y);\r\n    //         }\r\n    //     });\r\n    // });\r\n\r\n    ctxNext.fillStyle = this.color;\r\n    this.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          ctxNext.fillStyle = this.color;\r\n          const currentX = x + .025;\r\n          const currentY = y + .025;\r\n          ctxNext.fillRect(currentX, currentY, 1-.025, 1 -.025);\r\n          this.add3D(ctxNext, currentX, currentY);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","// map keys to key codes\r\nexport class KEY {\r\n  static readonly RIGHT = 'ArrowRight';\r\n  static readonly LEFT = 'ArrowLeft';\r\n\r\n  static readonly ESC = 'Escape';\r\n  static readonly SPACE = 'Space';\r\n  static readonly UP = 'ArrowUp';\r\n  static readonly DOWN = 'ArrowDown';\r\n}\r\n\r\n\r\n// Tetris constants\r\nexport const COLS = 10;\r\nexport const ROWS = 20;\r\nexport const BLOCK_SIZE = 30;\r\nexport const LINES_PER_LEVEL = 10;\r\n\r\nexport const COLORS = [\r\n  'none',\r\n  'cyan',\r\n  'blue',\r\n  'orange',\r\n  'yellow',\r\n  'green',\r\n  'purple',\r\n  'red'\r\n];\r\n\r\nexport const SHAPES = [\r\n  [],\r\n  [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\r\n  [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\r\n  [[0, 0, 3], [3, 3, 3], [0, 0, 0]],\r\n  [[4, 4], [4, 4]],\r\n  [[0, 5, 5], [5, 5, 0], [0, 0, 0]],\r\n  [[0, 6, 0], [6, 6, 6], [0, 0, 0]],\r\n  [[7, 7, 0], [0, 7, 7], [0, 0, 0]]\r\n]\r\n\r\nexport class POINTS {\r\n  static readonly SINGLE = 100;\r\n  static readonly DOUBLE = 300;\r\n  static readonly TRIPLE = 500;\r\n  static readonly TETRIS = 800;\r\n  static readonly SOFT_DROP = 1;\r\n  static readonly HARD_DROP = 2;\r\n}\r\n\r\nexport class LEVEL {\r\n  static readonly 0 = 800;\r\n  static readonly 1 = 720;\r\n  static readonly 2 = 630;\r\n  static readonly 3 = 550;\r\n  static readonly 4 = 470;\r\n  static readonly 5 = 380;\r\n  static readonly 6 = 300;\r\n  static readonly 7 = 220;\r\n  static readonly 8 = 130;\r\n  static readonly 9 = 100;\r\n  static readonly 10 = 80;\r\n  static readonly 11 = 80;\r\n  static readonly 12 = 80;\r\n  static readonly 13 = 70;\r\n  static readonly 14 = 70;\r\n  static readonly 15 = 70;\r\n  static readonly 16 = 50;\r\n  static readonly 17 = 50;\r\n  static readonly 18 = 50;\r\n  static readonly 19 = 30;\r\n  static readonly 20 = 30;\r\n  // 29+ is 20ms\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport {map} from 'rxjs/operators';\r\nimport { Observable } from \"rxjs\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\nimport { User } from \"../models/user\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(\r\n    private http:HttpClient,\r\n    public jwtHelper: JwtHelperService\r\n  ) { }\r\n\r\n  registerUser(user) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post<User>('users/register', user, {\r\n      headers: headers\r\n    }).pipe(map(res => res));\r\n  }\r\n\r\n  authenticateUser(user){\r\n    // let headers = new Headers();\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type','application/json');\r\n    return this.http.post<User>('users/authenticate', user, {\r\n      headers:headers\r\n    }).pipe(map(res => res));\r\n  }\r\n\r\n  getProfile(): Observable<User>{\r\n    this.loadToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization':this.authToken\r\n      })\r\n    }\r\n    return this.http.get<User>('users/profile', httpOptions\r\n    );\r\n  }\r\n\r\n  // TODO: make new api endpoint for user by id?\r\n  getUserById(id: string): Observable<User> {\r\n    // this.loadToken();\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n        // 'Authorization':this.authToken\r\n      })\r\n    }\r\n\r\n    console.log('The id of the profile is: '+ id);\r\n    return this.http.get<User>(`users/profile/${id}`, httpOptions\r\n    );\r\n  }\r\n\r\n  storeUserData(token, user){\r\n    let decodedToken = this.jwtHelper.decodeToken(token);\r\n    // localStorage.setItem('id_token', token);\r\n    localStorage.setItem('id_token', decodedToken);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    // this.authToken = token;\r\n    this.authToken = decodedToken;\r\n    this.user = user;\r\n  }\r\n\r\n  updateUserData(user){\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken(){\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  loggedIn(): boolean {\r\n    return !this.jwtHelper.isTokenExpired();\r\n  }\r\n\r\n  logout(){\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  getLocalId(): string {\r\n    return JSON.parse(localStorage.getItem('user'))._id;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport { Comment } from \"../../models/Comment\";\r\nimport {User} from \"../../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  deleteComment(commentId: number): Observable<User> {\r\n    return this.http.delete<User>(`users/deleteComment/${commentId}`\r\n    ).pipe();\r\n  }\r\n\r\n  // TODO: refactor test code (recipientId\r\n  addComment(recipientId: string, comment: string): Observable<User> {\r\n    const userId: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    const body = {\r\n      toId: recipientId,\r\n      userId: userId,\r\n      commentBody: comment\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    console.log('Recipient id: ' + recipientId);\r\n\r\n    return this.http.put<User>(`users/addComment`,\r\n      body,\r\n      httpOptions\r\n    ).pipe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FriendsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  addFriend(friendId: string): Observable<User> {\r\n    const id: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    const body = {\r\n      id: id,\r\n      friendId: friendId\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }\r\n\r\n    console.log(`friend id is ${friendId}`);\r\n\r\n    return this.http.put<User>(`users/addFriend`,\r\n      body,\r\n      httpOptions\r\n    ).pipe();\r\n  }\r\n\r\n  deleteFriend(friendId: string): Observable<User> {\r\n    const id: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    // const body = {\r\n    //   id: id,\r\n    //   friendId: friendId\r\n    // }\r\n    //\r\n    // const httpOptions = {\r\n    //   headers: new HttpHeaders({\r\n    //     'Content-Type': 'application/json'\r\n    //   })\r\n    // }\r\n\r\n    console.log(`friend id is ${friendId}`);\r\n\r\n    return this.http.delete<User>(`users/deleteFriend/${id}/${friendId}`,\r\n      ).pipe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Brick} from \"../../../models/Brick\";\r\nimport {Paddle} from \"../../../models/Paddle\";\r\nimport {Ball} from \"../../../models/Ball\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BricksmashService {\r\n\r\n  constructor() { }\r\n\r\n  // hasCollision(ball: Ball, paddle: Paddle, bricks: Brick[]): void{\r\n  //   for (let i = 0; i < bricks.length; i++){\r\n  //     this.brickCollision(bricks[i], ball);\r\n  //   }\r\n  // }\r\n\r\n  // detect if ball has collided with paddle\r\n  paddleCollision(ball: Ball, paddle: Paddle, ctx: CanvasRenderingContext2D): boolean{\r\n\r\n    if ((ball.x > paddle.x) &&\r\n      (ball.x < paddle.x + paddle.width) &&\r\n      (\r\n        (ball.y + ball.velocity.y > ctx.canvas.height - ball.radius - paddle.height) ||\r\n        (ball.y + ball.velocity.y < ball.radius + paddle.height)\r\n      )){//if ball hits paddle, reverse direction\r\n      // adjust angle of ball coming off paddle by modifying x value\r\n      // ball.velocity.x = ball.velocity.x * paddleCollision(ball, paddle);\r\n\r\n      // reflect y velocity\r\n      ball.velocity.y = -ball.velocity.y;\r\n\r\n      return true;\r\n    }\r\n    else{\r\n      // ball.lives--;\r\n      // console.log('lives: ' + ball.lives);\r\n      return false;\r\n      // if (ball.lives == -1){ // updated logic from '!lives' to allow lives to hit 0 before game over is given\r\n      //   alert(\"GAME OVER\"); //if ball hits bottom of screen, alert GAME OVER\r\n      //   document.location.reload();\r\n      // }\r\n      // else{\r\n      //   ball.x = ctx.canvas.width / 2;\r\n      //   ball.y = ctx.canvas.height - 30;\r\n      //   ball.velocity = {\r\n      //     x: Math.random() * (5-2) + 2,\r\n      //     y: -Math.random() * (5-2) - 2\r\n      //   };\r\n      //   paddle.paddleX = (canvas.width - paddle.paddleWidth) / 2;\r\n      // }\r\n    }\r\n\r\n\r\n    // //TODO figure out how to handle x becoming 0 causing ball not to change direction :(\r\n    // let ballPos = ball.x - paddle.x;\r\n    // let relativePos = ( paddle.width - ballPos );\r\n    // let angle = relativePos * ( Math.PI / paddle.width ); //translate to radians - this finds the number of radians per paddle pixel\r\n    //\r\n    // // Once you got the angle, take the cos of it to grab the direction.\r\n    // //Multiply the direction times the ball's vel, and you got the ball's new velocity\r\n    // let newXvel = Math.cos( angle ) * ball.velocity.x;\r\n    //\r\n    // return newXvel;\r\n\r\n  }\r\n\r\n\r\n\r\n  // detect if ball has collided with brick\r\n  brickCollision(brick: Brick, ball: Ball): boolean{\r\n\r\n    if (brick.status === 1){\r\n      if (\r\n        (ball.x > brick.x) &&\r\n        (ball.x < brick.x + brick.width) &&\r\n        (ball.y > brick.y) &&\r\n        (ball.y < brick.y + brick.height)\r\n      ){\r\n        ball.velocity.y = -ball.velocity.y; //if the center of the brick in question is within a brick, then a collision is considered to have occurred\r\n        brick.status = 0;\r\n        // ball.score++;\r\n\r\n        console.log('collision detected!');\r\n        return true;\r\n      }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  // Did ball 'collide' with bottom of screen\r\n  screenCollision(ball: Ball, ctx: CanvasRenderingContext2D): boolean{\r\n    let collisionOccurred = false;\r\n    // collision detection with screen\r\n    if (ball.x - ball.radius <= 0 || ball.x + ball.radius >= ctx.canvas.width){\r\n      ball.velocity.x = -ball.velocity.x;\r\n      // this.x = -this.x;\r\n      // collisionOccurred = true;\r\n    }\r\n\r\n    // todo experiment\r\n    // if (ball.y - ball.radius <= 0 || ball.y + ball.radius >= ctx.canvas.height){\r\n    if (ball.y - ball.radius <= 0){\r\n      ball.velocity.y = -ball.velocity.y;\r\n      ball.y = -ball.y;\r\n    }\r\n\r\n    if (ball.y + ball.radius >= ctx.canvas.height){\r\n      collisionOccurred = true;\r\n    }\r\n\r\n\r\n    ball.x += ball.velocity.x;\r\n    ball.y += ball.velocity.y;\r\n\r\n    return collisionOccurred;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {AuthService} from \"../auth.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/User\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {HighScoreResponse} from \"../../models/HighScoreResponse\";\r\nimport {UserData} from \"../../models/UserData\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n    ) { }\r\n\r\n  updateScore(scoreToUpdate: string, score: number): Observable<User> {\r\n    const userId: number = JSON.parse(localStorage.getItem('user'))._id;\r\n    const body = {\r\n      userId: userId,\r\n      score: score\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    console.log(`I'm about to update your score`);\r\n\r\n    // let headers = new HttpHeaders();\r\n    // headers.append('Content-Type', 'application/json');\r\n    // `http://localhost:8080/users/update-${scoreToUpdate}-score`\r\n    return this.http.put<User>(`users/update-${scoreToUpdate}-score`,\r\n      body,\r\n      httpOptions\r\n    ).pipe(\r\n      // catchError((err, user){\r\n      //   console.log(err, user);\r\n      // })\r\n    );\r\n\r\n    // return this.http.post('users/update-' + scoreToUpdate + '-score', body, {\r\n    //   headers: headers\r\n    // }); //.pipe(map(res => res));\r\n  }\r\n\r\n  getHighScores(game: string): Observable<UserData[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    // TODO: update url to take parameter\r\n    return this.http.get<HighScoreResponse>(`users/games/highScores/${game}`,\r\n      httpOptions)\r\n      .pipe(\r\n        map(res => res.sortedUsers)\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {COLS, POINTS, ROWS} from \"../../../models/constants\";\r\nimport {IPiece} from \"../../../models/Piece\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TetrisService {\r\n\r\n  constructor() { }\r\n\r\n  getEmptyBoard(): number[][]{\r\n    return Array.from({ length: ROWS }, () => Array(COLS).fill(0));\r\n  }\r\n\r\n  valid(p: IPiece, board: number[][]): boolean{\r\n    return p.shape.every((row, dy) => {\r\n      return row.every((value, dx) => {\r\n        let x = p.x + dx;\r\n        let y = p.y + dy;\r\n        return (\r\n          this.isEmpty(value) ||\r\n          (this.insideWalls(x) &&\r\n            this.aboveFloor(y) &&\r\n            this.notOccupied(board, x, y))\r\n        );\r\n        // return value === 0 ||  // Empty cell\r\n        // (p.x + x >= 0 && // Left wall\r\n        //   p.x + x < COLS && // Right wall\r\n        //   p.y + y < ROWS) // Bottom wall -originally '<=' but was going through floor?\r\n      });\r\n    });\r\n  }\r\n\r\n  notOccupied(board: number[][], x: number, y: number): boolean {\r\n    return board[y] && board[y][x] === 0;\r\n  }\r\n\r\n  aboveFloor(y: number): boolean {\r\n    return y <= ROWS;\r\n  }\r\n\r\n  insideWalls(x: number): boolean {\r\n    return x >= 0 && x < COLS;\r\n  }\r\n\r\n  isEmpty(value: number): boolean {\r\n    return value === 0;\r\n  }\r\n\r\n  rotate(piece: IPiece): IPiece {\r\n    // Clone piece using JSON\r\n    let p: IPiece = JSON.parse(JSON.stringify(piece));\r\n\r\n    // Transpose matrix\r\n    for (let y = 0; y < p.shape.length; ++y){\r\n      for (let x = 0; x < y; ++x){\r\n        [p.shape[x][y], p.shape[y][x]] = [p.shape[y][x], p.shape[x][y]];\r\n      }\r\n    }\r\n\r\n    // Reverse order of the columns\r\n    p.shape.forEach(row => row.reverse());\r\n\r\n    // Return clone\r\n    return p;\r\n  }\r\n\r\n  getLinesClearedPoints(lines: number, level: number): number {\r\n    const lineClearPoints =\r\n      lines === 1\r\n        ? POINTS.SINGLE\r\n        : lines === 2\r\n        ? POINTS.DOUBLE\r\n        : lines === 3\r\n          ? POINTS.TRIPLE\r\n          : lines === 4\r\n            ? POINTS.TETRIS\r\n            : 0;\r\n\r\n    // depending on the level, give more points for line clears (+1 since first level is 0)\r\n    return (level + 1) * lineClearPoints;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  editProfile(newProfile: string): Observable<User>{\r\n    const userId: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    const body = {\r\n      userId: userId,\r\n      profile: newProfile\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    return this.http.put<User>(`users/edit-profile`,\r\n      body,\r\n      httpOptions\r\n    ).pipe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {UserData} from \"../../models/UserData\";\r\nimport {HighScoreResponse} from \"../../models/HighScoreResponse\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  searchUsers(searchTerm: string, type: string):Observable<UserData[]>{\r\n    // console.log(\"Search term: \" + searchTerm);\r\n    // console.log(\"Search type: \" + type);\r\n\r\n    // TODO: make httpOptions into classes? (reuse code)\r\n    let params = new HttpParams();\r\n    params = params.append('searchTerm', searchTerm);\r\n    params = params.append('type', type);\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      params: params\r\n    }\r\n\r\n    return this.http.get<HighScoreResponse>(\r\n      `users/searchUsers`,\r\n      httpOptions\r\n    )\r\n      .pipe(\r\n        map(res => res.sortedUsers)\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  // changed to use bang operator to catch empty string on fields changed on form re-submission\r\n  validateRegister(user){\r\n    if(!user.name || !user.email || !user.username || !user.password){\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email){\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}