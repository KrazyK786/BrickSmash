{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/games/bricksmash/bricksmash.component.ts","./src/app/components/games/bricksmash/bricksmash.component.html","./src/app/components/games/tetris/tetris.component.ts","./src/app/components/games/tetris/tetris.component.html","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/register/register.component.ts","./src/app/components/register/register.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/guards/auth.guard.ts","./src/app/models/Ball.ts","./src/app/models/Brick.ts","./src/app/models/Paddle.ts","./src/app/models/Piece.ts","./src/app/models/constants.ts","./src/app/services/auth.service.ts","./src/app/services/comments/comments.service.ts","./src/app/services/friends/friends.service.ts","./src/app/services/games/bricksmash/bricksmash.service.ts","./src/app/services/games/game.service.ts","./src/app/services/games/tetris/tetris.service.ts","./src/app/services/profile/profile.service.ts","./src/app/services/search/search.service.ts","./src/app/services/validate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'BrickSmassshhhhh';\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"container\">\r\n  <flash-messages></flash-messages>\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule,Routes } from \"@angular/router\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\nimport { ValidateService } from \"./services/validate.service\";\r\nimport { FlashMessagesModule } from \"angular2-flash-messages\";\r\nimport { AuthService } from \"./services/auth.service\";\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { JwtHelperService, JwtModule } from \"@auth0/angular-jwt\";\r\nimport { AuthGuard } from \"./guards/auth.guard\";\r\nimport { BricksmashComponent } from './components/games/bricksmash/bricksmash.component';\r\nimport { TetrisComponent } from './components/games/tetris/tetris.component';\r\nimport { SearchComponent } from './components/search/search.component';\r\n\r\n\r\nconst appRoutes: Routes = [\r\n  {path:'', component: HomeComponent},\r\n  {path:'register', component: RegisterComponent},\r\n  {path:'login', component: LoginComponent},\r\n  {path:'search', component: SearchComponent, canActivate:[AuthGuard]},\r\n  {path:'dashboard', component: DashboardComponent, canActivate:[AuthGuard]},\r\n  {path:'profile/:id', component: ProfileComponent, canActivate:[AuthGuard]},\r\n  {path:'games/bricksmash', component: BricksmashComponent, canActivate:[AuthGuard]},\r\n  {path:'games/tetris', component: TetrisComponent, canActivate:[AuthGuard]}\r\n];\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem(\"id_token\");\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    HomeComponent,\r\n    DashboardComponent,\r\n    ProfileComponent,\r\n    BricksmashComponent,\r\n    TetrisComponent,\r\n    SearchComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    RouterModule.forRoot(appRoutes, {\r\n      onSameUrlNavigation: 'reload'\r\n    }),\r\n    FormsModule,\r\n    FlashMessagesModule.forRoot(),\r\n    HttpClientModule,\r\n    JwtModule.forRoot({\r\n      config:{\r\n        tokenGetter: tokenGetter,\r\n        // whitelistedDomains: [\"localhost:3001\"],\r\n        whitelistedDomains: new Array(new RegExp('^null$')),\r\n        blacklistedRoutes: [\"example.com\"]\r\n      }\r\n    })\r\n  ],\r\n  providers: [\r\n    ValidateService,\r\n    AuthService,\r\n    AuthGuard,\r\n    JwtModule,\r\n    JwtHelperService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\n\r\nimport { User } from \"../../models/user\";\r\nimport { UserData } from \"../../models/UserData\";\r\nimport {CommentsService} from \"../../services/comments/comments.service\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n  user: UserData;\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private commentsService: CommentsService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getProfile().subscribe(profile => {\r\n        this.user = profile.user;\r\n        console.log(profile);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  deleteComment(id: number): void {\r\n    this.commentsService.deleteComment(id).subscribe(res => {\r\n      if (res.success === true){\r\n        this.user = res.user;\r\n        console.log(res.user);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div *ngIf=\"user\">\r\n  <h2 class=\"page-header\">Dashboard</h2>\r\n  <p>\r\n    <!--  Welcome to your Dashboard!-->\r\n    Welcome to your Dashboard {{user.name}}!\r\n  </p>\r\n\r\n  <div class=\"jumbotron text-center\">\r\n    <h1>{{user.name}}'s Arcade Library</h1>\r\n<!--    <p class=\"lead\">Welcome to The Arcade Library!! Low-tech fun in a high-tech world :)</p>-->\r\n    <div>\r\n      <a class=\"btn btn-primary\" [routerLink]=\"['/games/bricksmash']\">BrickSmash</a>\r\n      <a class=\"btn btn-secondary\" [routerLink]=\"['/games/tetris']\">Tetris</a>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\" >\r\n      <h3>High Scores</h3>\r\n\r\n<!--      <h1>BrickSmash</h1>-->\r\n      <p>BrickSmash: {{ user.games.bricksmash.highscore }}</p>\r\n\r\n<!--      <h1>Tetris</h1>-->\r\n      <p>Tetris: {{ user.games.tetris.highscore }}</p>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <h3>Friends</h3>\r\n<!--      <p>Coming soon!</p>-->\r\n      <table>\r\n        <tr *ngIf=\"user.friends.length == 0\">\r\n          <td style=\"font-style: italic\">Add some friends!</td>\r\n        </tr>\r\n        <tr *ngFor=\"let friend of user.friends\">\r\n          <td>\r\n            <a [routerLink]=\"['/profile', friend._id]\">{{ friend.username }}</a>\r\n          </td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <h3>Feed</h3>\r\n      <table>\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Comment</th>\r\n          <th>User</th>\r\n          <th></th>\r\n        </tr>\r\n        <tr *ngIf=\"user.comments.length == 0\">\r\n          <td style=\"font-style: italic\">'No Comment' :P</td>\r\n        </tr>\r\n        <tr *ngFor=\"let comment of user.comments\">\r\n          <td>{{ comment.date | date }}</td>\r\n          <td>{{ comment.body }}</td>\r\n          <td>{{ comment.user.username }}</td>\r\n          <td><button (click)=\"deleteComment(comment._id)\" >Delete</button></td>\r\n        </tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\r\nimport { Paddle } from \"../../../models/Paddle\";\r\nimport {KEY} from \"../../../models/constants\";\r\nimport {Ball} from \"../../../models/Ball\";\r\nimport {Brick} from \"../../../models/Brick\";\r\n\r\nimport { BricksmashService } from \"../../../services/games/bricksmash/bricksmash.service\";\r\nimport {UserData} from \"../../../models/UserData\";\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {GameService} from \"../../../services/games/game.service\";\r\nimport {User} from \"../../../models/User\";\r\n\r\n@Component({\r\n  selector: 'app-bricksmash',\r\n  templateUrl: './bricksmash.component.html',\r\n  styleUrls: ['./bricksmash.component.css']\r\n})\r\nexport class BricksmashComponent implements OnInit {\r\n  // Set User\r\n  user: UserData;\r\n\r\n  // Get reference to canvas\r\n  @ViewChild('brickSmashCanvas', { static: true })\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  ctx: CanvasRenderingContext2D;\r\n\r\n  highscoreUserArray: UserData[];\r\n\r\n  requestId: any;\r\n  paddle: Paddle;\r\n  ball: Ball;\r\n  bricks: Brick[];\r\n  score: number;\r\n  lives: number;\r\n  paused: boolean;\r\n  gameStarted: boolean;\r\n  highScore: number;\r\n  pauseButtonText: string;\r\n  pauseButtonClass: string;\r\n  moves = {\r\n    [KEY.RIGHT]: (paddle: Paddle) => {\r\n      paddle.rightPressed = true;\r\n      paddle.leftPressed = false;\r\n    },\r\n    [KEY.LEFT]: (paddle: Paddle) => {\r\n      paddle.leftPressed = true;\r\n      paddle.rightPressed = false;\r\n    }\r\n  };\r\n\r\n  @HostListener('window: keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent){\r\n    if (this.gameStarted){\r\n      if (this.moves[event.code]){\r\n        event.preventDefault();\r\n        this.moves[event.code](this.paddle);\r\n      }\r\n\r\n      // console.log(event.code);\r\n\r\n      this.ctx.clearRect(0,0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n      // this.paddle.draw();\r\n      this.paddle.update()\r\n    }\r\n  }\r\n\r\n  // hacky 'debugging' for x/y coordinates\r\n  @HostListener('document:mouseup', ['$event'])\r\n  onMouseUp(e){\r\n    console.log(e);\r\n  }\r\n\r\n  @HostListener('document:mousemove', ['$event'])\r\n    onMouseMove(e: MouseEvent){\r\n    if (this.gameStarted) {\r\n      // e.preventDefault();\r\n\r\n      // TODO: resolve mouse movement with page layout\r\n\r\n      let relativeX = e.x - this.ctx.canvas.offsetLeft;\r\n      if (relativeX > 0 && relativeX < this.ctx.canvas.width) {\r\n        this.paddle.x = relativeX - this.paddle.width / 2;\r\n      }\r\n\r\n      // let relativeX = e.x - this.ctx.canvas.width;\r\n      // if (relativeX > 0 && relativeX < this.ctx.canvas.width) {\r\n      //   this.paddle.x = relativeX - this.paddle.width / 2;\r\n      // }\r\n\r\n      // let relativeX = e.clientX - this.ctx.canvas.offsetLeft;\r\n      // if (relativeX > 0 && relativeX < this.ctx.canvas.width) {\r\n      //   this.paddle.x = relativeX - this.paddle.width / 2;\r\n      // }\r\n      // console.log(e);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private bricksmashService: BricksmashService,\r\n    private authService: AuthService,\r\n    private gameService: GameService\r\n              ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // TODO: use local storage?\r\n    this.authService.getProfile().subscribe(profile => {\r\n      console.log(profile);\r\n      this.user = profile.user;\r\n\r\n      // set highscore on page load\r\n      // this.highScore = this.user.bricksmashscore;\r\n      this.highScore = this.user.games.bricksmash.highscore;\r\n    },\r\n    err => {\r\n    console.log(err);\r\n    return false;\r\n    }\r\n    );\r\n\r\n    this.gameService.getHighScores('bricksmash').subscribe( resArray => {\r\n      console.log(resArray);\r\n      this.highscoreUserArray = resArray;\r\n    });\r\n\r\n    this.initBrickSmash();\r\n   // this.resetGame();\r\n    // this.x = this.ctx.canvas.width/2;\r\n    // this.y = this.ctx.canvas.height-30;\r\n  }\r\n\r\n  initBrickSmash(): void{\r\n    // Get the 2D context that we draw on\r\n    this.ctx = this.canvas.nativeElement.getContext('2d');\r\n\r\n    this.resetGame();\r\n    // this.initBricks();\r\n\r\n    // Calculate size of canvas from constants..?\r\n  }\r\n\r\n  // initialize objects for game (maybe move to init method to draw canvas before start?\r\n  startGame(): void{\r\n    this.resetGame();\r\n    this.paddle = new Paddle(this.ctx);\r\n    this.ball = new Ball(this.ctx);\r\n    this.bricks = this.initBricks();\r\n    // this.drawBricks();\r\n\r\n    // if game already running, canc\r\n    if (this.requestId){\r\n      cancelAnimationFrame(this.requestId);\r\n    }\r\n    this.gameStarted = true;\r\n\r\n    this.animate();\r\n\r\n\r\n    // if (this.paused){\r\n    //   this.paused = false;\r\n    //   this.animate();\r\n    // }\r\n    //\r\n    // else {\r\n    //   this.paddle = new Paddle(this.ctx);\r\n    //   this.ball = new Ball(this.ctx);\r\n    //   this.bricks = this.initBricks();\r\n    //   // this.drawBricks();\r\n    //\r\n    //   // if game already running, canc\r\n    //   if (this.requestId){\r\n    //     cancelAnimationFrame(this.requestId);\r\n    //   }\r\n    //   this.gameStarted = true;\r\n    //\r\n    //   this.animate();\r\n    //\r\n    // }\r\n\r\n\r\n    // console.log(\"now were cooking with oil!\");\r\n  }\r\n\r\n  animate(): void {\r\n    if (this.paused){\r\n      return;\r\n    }\r\n\r\n    this.updateBall();\r\n\r\n    if (this.gameStarted === false){\r\n      return;\r\n    }\r\n\r\n    this.updateBricks();\r\n\r\n    this.drawBrickSmash();\r\n\r\n    // requestAnimationFrame(this.animate.bind(this));\r\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  pause(): void{\r\n    this.paused = !this.paused;\r\n\r\n    if (this.paused){\r\n      this.pauseButtonText = 'Play';\r\n      this.pauseButtonClass = 'btn btn-success';\r\n      cancelAnimationFrame(this.requestId);\r\n      return;\r\n    }\r\n\r\n    else {\r\n      this.pauseButtonText = 'Pause';\r\n      this.pauseButtonClass = 'btn btn-warning';\r\n      this.animate();\r\n    }\r\n\r\n\r\n  }\r\n\r\n  resetGame(): void{\r\n    this.score = 0;\r\n\r\n    // // Development purposes\r\n    // this.lives = 0;\r\n    this.lives = 3;\r\n\r\n    this.paused = false;\r\n\r\n    this.pauseButtonText = 'Pause';\r\n    this.pauseButtonClass = 'btn btn-warning';\r\n\r\n    // this.highScore = this.user.bricksmashscore;\r\n\r\n    // if (!this.highScore){\r\n    //   this.highScore = 0;\r\n    // }\r\n  }\r\n\r\n  // Reset game\r\n  respawn(): void {\r\n    this.ball.spawn();\r\n    // this.paddle = new Paddle(this.ctx);\r\n    this.paddle.spawn();\r\n    // this.paused = true;\r\n    this.pause();\r\n    cancelAnimationFrame(this.requestId);\r\n    // this.bricks = this.initBricks();\r\n  }\r\n\r\n  updateBall(): void{\r\n    // this.bricksmashService.screenCollision(this.ball, this.ctx);\r\n    // this.bricksmashService.paddleCollision(this.ball, this.paddle, this.ctx);\r\n\r\n    this.bricksmashService.paddleCollision(this.ball, this.paddle, this.ctx);\r\n    // update lives\r\n    if (this.bricksmashService.screenCollision(this.ball, this.ctx)){\r\n      this.lives--;\r\n      console.log('lives: ' + this.lives);\r\n      if (this.lives === -1){\r\n        this.lives = 0;\r\n        this.gameOver();\r\n        // return;\r\n      }\r\n      else{\r\n        this.respawn();\r\n        // return;\r\n      }\r\n      // return;\r\n    }\r\n  }\r\n\r\n  updateBricks(): void{\r\n    for (let i = 0; i < this.bricks.length; i++){\r\n      let tmpBrick = this.bricks[i];\r\n      if (this.bricksmashService.brickCollision(tmpBrick, this.ball)){\r\n        this.score += 1;\r\n        tmpBrick.status = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  drawBrickSmash(): void {\r\n    this.ctx.clearRect(0,0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.paddle.draw();\r\n    this.ball.draw();\r\n    this.drawBricks();\r\n  }\r\n\r\n  initBricks(): Brick[]{\r\n    let tmpBricks = [];\r\n\r\n    let brickRowCount = 3;\r\n    let brickColumnCount = 5;\r\n\r\n    for (let c = 0; c < brickColumnCount; c++){\r\n      // let tmpBricks = [c];\r\n      for (let r = 0; r < brickRowCount; r++){\r\n\r\n        const brickWidth = 75;\r\n        const brickHeight = 20;\r\n        const brickPadding = 10;\r\n        const brickOffsetTop = 30;\r\n        const brickOffsetLeft = 30;\r\n\r\n        let brickX = (c * (brickWidth + brickPadding)) + brickOffsetLeft;\r\n        let brickY = (r * (brickHeight + brickPadding)) + brickOffsetTop;\r\n\r\n        let newBrick = new Brick(this.ctx, brickX, brickY);\r\n        tmpBricks.push(newBrick);\r\n        // tmpBricks.push(new Brick(this.ctx, brickX, brickY));\r\n\r\n      }\r\n    }\r\n    return tmpBricks;\r\n  }\r\n\r\n  drawBricks(): void{\r\n    this.bricks.forEach((brick) => {\r\n      if (brick.status === 1){\r\n        brick.draw();\r\n      }\r\n    });\r\n  }\r\n\r\n  gameOver(): void {\r\n    this.gameStarted = false;\r\n    cancelAnimationFrame(this.requestId);\r\n\r\n    // update highscore\r\n    if (this.score > this.highScore){\r\n      this.gameService.updateScore('bricksmash', this.score).subscribe( res => {\r\n        // console.log(res);\r\n        if (res.success === true){\r\n          // TODO: add this.authService.updateUserData(res.user) ?\r\n          // this.highScore = res.user.bricksmashscore;\r\n          this.highScore = res.user.games.bricksmash.highscore;\r\n        }\r\n      });\r\n    }\r\n    // this.highScore = this.score > this.highScore ? this.score : this.highScore;\r\n\r\n\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fillRect(0, this.ctx.canvas.height/3, this.ctx.canvas.width, this.ctx.canvas.height/3);\r\n    // this.ctx.fillRect(1, 3, 8, 1.2);\r\n    this.ctx.font = '25px \"Press Start 2P\", Arial';\r\n    // this.ctx.font = '50px Arial';\r\n    // this.ctx.font = '1px Arial';\r\n    this.ctx.fillStyle = 'red';\r\n    this.ctx.fillText('GAME OVER', this.ctx.canvas.width/5, this.ctx.canvas.height/2);\r\n    // this.ctx.fillText('GAME OVER', 1.8, 4);\r\n    console.log('Game over');\r\n    // return;\r\n  }\r\n}\r\n","<div class=\"grid\">\r\n\r\n  <div class=\"left-column\">\r\n<!--    <p>test</p>-->\r\n    <h3>High Scores</h3>\r\n\r\n    <table>\r\n      <tr>\r\n        <th>User</th>\r\n        <th>Score</th>\r\n      </tr>\r\n      <tr *ngFor=\"let user of this.highscoreUserArray\">\r\n<!--        TODO: why are these types messed up? -->\r\n        <td>\r\n          <a [routerLink]=\"['/profile', user._id]\">{{ user.username }}</a>\r\n        </td>\r\n        <td>{{ user.games.bricksmash.highscore }}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n\r\n  <canvas #brickSmashCanvas class=\"gameCanvas\" width=\"480\" height=\"320\"></canvas>\r\n<!--  <canvas #brickSmashCanvas class=\"gameCanvas\" width=\"720\" height=\"480\"></canvas>-->\r\n\r\n  <div class=\"right-column\">\r\n\r\n    <div class=\"wrapper scoreboard\">\r\n      <h1>Bricksmash</h1>\r\n      <p>Score: {{ score }}</p>\r\n      <p>Lives: {{ lives }}</p>\r\n      <p>High Score: {{ highScore }}</p>\r\n    </div>\r\n\r\n\r\n    <div class=\"wrapper\">\r\n      <input\r\n        class=\"btn btn-success\"\r\n        type=\"button\"\r\n        value=\"Play\"\r\n        id=\"startButton\"\r\n        (click)=\"startGame()\"\r\n        *ngIf=\"!gameStarted\"\r\n      >\r\n      <input\r\n        class=\"{{ pauseButtonClass }}\"\r\n        type=\"button\"\r\n        value=\"{{ pauseButtonText }}\"\r\n        id=\"pauseButton\"\r\n        (click)=\"pause()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n      <input\r\n        class=\"btn btn-danger\"\r\n        type=\"button\"\r\n        value=\"Quit\"\r\n        id=\"stopButton\"\r\n        (click)=\"gameOver()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import {Component, ElementRef, HostListener, OnInit, ViewChild} from '@angular/core';\r\nimport {BLOCK_SIZE, COLORS, COLS, KEY, LEVEL, LINES_PER_LEVEL, POINTS, ROWS} from \"../../../models/constants\";\r\nimport {IPiece, Piece} from \"../../../models/Piece\";\r\nimport {TetrisService} from \"../../../services/games/tetris/tetris.service\";\r\nimport {AuthService} from \"../../../services/auth.service\";\r\nimport {GameService} from \"../../../services/games/game.service\";\r\nimport {UserData} from \"../../../models/UserData\";\r\n\r\n@Component({\r\n  selector: 'app-tetris',\r\n  templateUrl: './tetris.component.html',\r\n  styleUrls: ['./tetris.component.css']\r\n})\r\nexport class TetrisComponent implements OnInit {\r\n  // Set User\r\n  user: UserData;\r\n\r\n  // Get reference to canvas\r\n  @ViewChild('board', { static: true })\r\n  canvas: ElementRef<HTMLCanvasElement>;\r\n\r\n  @ViewChild('next', { static: true })\r\n  canvasNext: ElementRef<HTMLCanvasElement>;\r\n\r\n  ctx: CanvasRenderingContext2D;\r\n  ctxNext: CanvasRenderingContext2D;\r\n  points: number;\r\n  lines: number;\r\n  level: number;\r\n  board: number[][];\r\n  piece: Piece;\r\n  next: Piece;\r\n  requestId: number;\r\n  highScore: number;\r\n  paused: boolean;\r\n  gameStarted: boolean;\r\n  pauseButtonText: string;\r\n  pauseButtonClass: string;\r\n  highscoreUserArray: UserData[];\r\n  // time: Time;\r\n  time: {\r\n    start: number;\r\n    elapsed: number;\r\n    level: number\r\n  };\r\n  moves = {\r\n    [KEY.LEFT]: (p: IPiece): IPiece => ({ ...p, x: p.x - 1 }),\r\n    [KEY.RIGHT]: (p: IPiece): IPiece => ({ ...p, x: p.x + 1 }),\r\n    [KEY.DOWN]: (p: IPiece): IPiece => ({ ...p, y: p.y + 1 }),\r\n    [KEY.SPACE]: (p: IPiece): IPiece => ({ ...p, y: p.y + 1 }),\r\n    [KEY.UP]: (p: IPiece): IPiece => this.tetrisService.rotate(p)\r\n  }\r\n\r\n  @HostListener('window: keydown', ['$event'])\r\n  keyEvent(event: KeyboardEvent){\r\n    if (event.code === KEY.ESC){\r\n      this.gameOver();\r\n    }\r\n    //event.keyCode is deprecated\r\n    if (this.moves[event.code]){\r\n      // If the key exists in our moves stop the event from bubbling\r\n      event.preventDefault();\r\n      // Get the next state of the piece\r\n      let p = this.moves[event.code](this.piece);\r\n\r\n      // console.log('p: ');\r\n      // console.log(p);\r\n      // console.log('this');\r\n      // console.log(this.piece);\r\n\r\n      // Hard drop\r\n      if (event.code === KEY.SPACE){\r\n        while (this.tetrisService.valid(p, this.board)){\r\n          this.points += POINTS.HARD_DROP; // Points for every drop\r\n          this.piece.move(p);\r\n          p = this.moves[event.code](this.piece);\r\n        }\r\n      }\r\n\r\n      else if (this.tetrisService.valid(p, this.board)){\r\n        // Move the piece\r\n        this.piece.move(p);\r\n        if (event.code === KEY.DOWN){\r\n          this.points += POINTS.SOFT_DROP; // Points if we move down\r\n        }\r\n      }\r\n\r\n      // Clear the old position before drawing\r\n      this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n\r\n      // Draw the new position\r\n      this.piece.draw();\r\n    }\r\n  }\r\n\r\n\r\n  constructor(\r\n    private tetrisService: TetrisService,\r\n    private authService: AuthService,\r\n    private gameService: GameService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.getProfile().subscribe(profile => {\r\n        console.log(profile);\r\n        this.user = profile.user;\r\n\r\n        // set highscore on page load\r\n        this.highScore = this.user.games.tetris.highscore;\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        return false;\r\n      });\r\n\r\n    this.gameService.getHighScores('tetris').subscribe( resArray => {\r\n      console.log(resArray);\r\n      this.highscoreUserArray = resArray;\r\n    });\r\n\r\n    this.initBoard();\r\n    this.initNext();\r\n    this.resetGame();\r\n    // this.highScore = 0;\r\n\r\n    // Scale so we don't need to give size on every draw\r\n    this.ctx.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n  }\r\n\r\n  initBoard() {\r\n    // Get the 2D context that we draw on\r\n    this.ctx = this.canvas.nativeElement.getContext('2d');\r\n\r\n    // Calculate size of canvas from constants.\r\n    this.ctx.canvas.width = COLS * BLOCK_SIZE;\r\n    this.ctx.canvas.height = ROWS * BLOCK_SIZE;\r\n  }\r\n\r\n  initNext(): void{\r\n    this.ctxNext = this.canvasNext.nativeElement.getContext('2d');\r\n\r\n    // Calculate size of canvas from constants.\r\n    // The + 2 is to allow for space to add the drop shadow to\r\n    this.ctxNext.canvas.width = 4 * BLOCK_SIZE + 2;\r\n    this.ctxNext.canvas.height = 4 * BLOCK_SIZE;\r\n\r\n    this.ctxNext.scale(BLOCK_SIZE, BLOCK_SIZE);\r\n  }\r\n\r\n  drawBoard(): void{\r\n    this.board.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0){\r\n          this.ctx.fillStyle = COLORS[value];\r\n          this.ctx.fillRect(x, y, 1, 1);\r\n          // this.add3D(x, y, value);\r\n        }\r\n      });\r\n    });\r\n    // this.addOutlines();\r\n  }\r\n\r\n  drawPiece(): void{\r\n    this.ctx.clearRect(0, 0, this.ctx.canvas.width, this.ctx.canvas.height);\r\n    this.piece.draw();\r\n    this.drawBoard();\r\n\r\n  }\r\n\r\n  play(){\r\n    this.gameStarted = true;\r\n    this.resetGame();\r\n    this.next = new Piece(this.ctx);\r\n    this.piece = new Piece(this.ctx);\r\n    this.next.drawNext(this.ctxNext);\r\n\r\n    // console.table(this.board);\r\n\r\n    // set current time\r\n    this.time.start = performance.now();\r\n\r\n    // If we have an old game running a game, then cancel the old\r\n    if (this.requestId){\r\n      cancelAnimationFrame(this.requestId);\r\n    }\r\n\r\n    this.animate();\r\n  }\r\n\r\n  animate(now = 0): void {\r\n    // Update elapsed time\r\n    this.time.elapsed = now - this.time.start;\r\n\r\n    // If elapsed time has passed time for current level\r\n    if (this.time.elapsed > this.time.level) {\r\n      // Reset start time\r\n      this.time.start = now;\r\n      this. drop();\r\n      if (!this.drop()) {\r\n        this.gameOver();\r\n        return;\r\n      }\r\n    }\r\n    this.drawPiece();\r\n    this.requestId = requestAnimationFrame(this.animate.bind(this));\r\n  }\r\n\r\n  drop(): boolean {\r\n    // set p as if down key was pressed\r\n    let p = this.moves[KEY.DOWN](this.piece);\r\n\r\n    if (this.tetrisService.valid(p, this.board)){\r\n      // Move the piece\r\n      this.piece.move(p);\r\n    }\r\n\r\n\r\n    else {\r\n      // add piece to gameboard to lock it in\r\n      this.freeze();\r\n\r\n      //\r\n      this.clearLines();\r\n      // check if the piece is at the top of the board\r\n      if (this.piece.y === 0){\r\n        // Game over\r\n        return false;\r\n      }\r\n\r\n      // this.piece = new Piece(this.ctx);\r\n      this.piece = this.next;\r\n      this.next = new Piece(this.ctx);\r\n      this.next.drawNext(this.ctxNext);\r\n    }\r\n    return true;\r\n  }\r\n\r\n  freeze(): void{\r\n    this.piece.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0){\r\n          this.board[y + this.piece.y][x + this.piece.x] = value;\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  clearLines(): void {\r\n    let lines = 0;\r\n    this.board.forEach((row, y) => {\r\n\r\n      // If every value is greater than 0\r\n      if (row.every(value => value !== 0)) {\r\n        lines++;\r\n\r\n        // Remove the row\r\n        this.board.splice(y, 1);\r\n\r\n        // Add a zero filled array at the top, causing the board to 'move down'\r\n        this.board.unshift(Array(COLS).fill(0));\r\n      }\r\n    });\r\n\r\n    if (lines > 0) {\r\n      // Calculate points form cleared lines and level\r\n      this.points += this.tetrisService.getLinesClearedPoints(lines, this.level);\r\n      this.lines += lines;\r\n\r\n      // If we have reached the lines per level\r\n      if (this.lines >= LINES_PER_LEVEL) {\r\n\r\n        // Goto next level\r\n        this.level++;\r\n\r\n        // Remove lines so we start working for the next level\r\n        this.lines -= LINES_PER_LEVEL;\r\n\r\n        // Increase speed of game\r\n        this.time.level = LEVEL[this.level];\r\n      }\r\n    }\r\n  }\r\n\r\n  // Initialize game\r\n  resetGame(): void {\r\n    this.points = 0;\r\n    this.lines = 0;\r\n    this.level = 0;\r\n    this.board = this.tetrisService.getEmptyBoard();\r\n    this.time = { start: 0, elapsed: 0, level: LEVEL[this.level] };\r\n    this.paused = false;\r\n\r\n    this.pauseButtonText = 'Pause';\r\n    this.pauseButtonClass = 'btn btn-warning';\r\n    // this.addOutlines();\r\n  }\r\n\r\n  // getEmptyBoard(): number[][] {\r\n  //   return Array.from({ length: ROWS }, () => Array(COLS).fill(0));\r\n  // }\r\n  gameOver(): void {\r\n    this.gameStarted = false;\r\n    cancelAnimationFrame(this.requestId);\r\n\r\n    // update highscore\r\n    if (this.points > this.highScore){\r\n      this.gameService.updateScore('tetris', this.points).subscribe( res => {\r\n        // console.log(res);\r\n        if (res.success === true){\r\n          this.highScore = res.user.games.tetris.highscore;\r\n        }\r\n      });\r\n    }\r\n    // this.highScore = this.points > this.highScore ? this.points : this.highScore;\r\n\r\n    this.highScore = this.points > this.highScore ? this.points : this.highScore;\r\n    this.ctx.fillStyle = 'black';\r\n    this.ctx.fillRect(1, 3, 8, 1.2);\r\n    this.ctx.font = '1px Arial';\r\n    this.ctx.fillStyle = 'red';\r\n    this.ctx.fillText('GAME OVER', 1.8, 4);\r\n  }\r\n\r\n  pause(): void {\r\n    this.paused = !this.paused;\r\n\r\n    if (this.paused) {\r\n      this.pauseButtonText = 'Play';\r\n      this.pauseButtonClass = 'btn btn-success';\r\n      cancelAnimationFrame(this.requestId);\r\n      return;\r\n    } else {\r\n      this.pauseButtonText = 'Pause';\r\n      this.pauseButtonClass = 'btn btn-warning';\r\n      this.animate();\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"grid\">\r\n  <div class=\"left-column\">\r\n    <h3>High Scores</h3>\r\n\r\n    <table>\r\n      <tr>\r\n        <th>User</th>\r\n        <th>Score</th>\r\n      </tr>\r\n      <tr *ngFor=\"let user of this.highscoreUserArray\">\r\n        <!--        TODO: why are these types messed up? -->\r\n        <td>\r\n          <a [routerLink]=\"['/profile', user._id]\">{{ user.username }}</a>\r\n        </td>\r\n        <td>{{ user.games.bricksmash.highscore }}</td>\r\n      </tr>\r\n    </table>\r\n  </div>\r\n  <canvas id=\"board\" #board class=\"game-board\" ></canvas>\r\n  <div class=\"right-column\">\r\n    <div>\r\n      <h1>Tetris</h1>\r\n      <p>Score: {{ points }}</p>\r\n      <p>Lines: {{ lines }}</p>\r\n      <p>Level: {{ level }}</p>\r\n      <p>High Score:</p>\r\n      <p>{{highScore }}</p>\r\n      <p>Next Block:</p>\r\n      <canvas #next class=\"next\"></canvas>\r\n    </div>\r\n    <div class=\"button-container\">\r\n<!--      <button-->\r\n<!--        (click)=\"play()\"-->\r\n<!--        class=\"play-button\"-->\r\n<!--      >Play</button>-->\r\n\r\n      <input\r\n        class=\"btn btn-success\"\r\n        type=\"button\"\r\n        value=\"Play\"\r\n        id=\"startButton\"\r\n        (click)=\"play()\"\r\n        *ngIf=\"!gameStarted\"\r\n      >\r\n      <input\r\n        class=\"{{ pauseButtonClass }}\"\r\n        type=\"button\"\r\n        value=\"{{ pauseButtonText }}\"\r\n        id=\"pauseButton\"\r\n        (click)=\"pause()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n      <input\r\n        class=\"btn btn-danger\"\r\n        type=\"button\"\r\n        value=\"Quit\"\r\n        id=\"stopButton\"\r\n        (click)=\"gameOver()\"\r\n        *ngIf=\"gameStarted\"\r\n      >\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"jumbotron text-center\">\r\n  <h1>The Arcade Library</h1>\r\n  <p class=\"lead\">Welcome to The Arcade Library!! Low-tech fun in a high-tech world :)</p>\r\n  <div>\r\n    <a class=\"btn btn-primary\" [routerLink]=\"['/register']\">Register</a> <a class=\"btn btn-secondary\" [routerLink]=\"['/login']\">Login</a>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <div class=\"col-md-4\" >\r\n    <h3>Express Backend</h3>\r\n    <p>A rock solid Node.js/Express server using Mongoose to organize models and query the database</p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3>Angular-CLI</h3>\r\n    <p>Angular-CLI to generate components, services and more.  Local dev server and easy compilation</p>\r\n  </div>\r\n  <div class=\"col-md-4\">\r\n    <h3>JWT Tokens</h3>\r\n    <p>Full featured authentication using JSON web tokens.  Login and store user data</p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  username: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router,\r\n    private flashMessage:FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onLoginSubmit(){\r\n    const user = {\r\n      username: this.username,\r\n      password: this.password\r\n    }\r\n\r\n    this.authService.authenticateUser(user).subscribe(data => {\r\n      if(data.success){\r\n        this.authService.storeUserData(data.token, data.user);\r\n        this.flashMessage.show('You are now logged in!', {\r\n          cssClass: 'alert-success',\r\n          timeout: 5000\r\n        });\r\n        this.router.navigate(['dashboard']);\r\n      }\r\n      else{\r\n        this.flashMessage.show(data.msg, {\r\n          cssClass: 'alert-danger',\r\n          timeout: 5000\r\n        });\r\n        this.router.navigate(['login']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<h2 class=\"page-header\">Login</h2>\r\n<form (submit)=\"onLoginSubmit()\">\r\n  <div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\">\r\n  </div>\r\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Login\">\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\nimport {UserData} from \"../../models/UserData\";\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  user: UserData;\r\n  id: string;\r\n\r\n  constructor(\r\n    public authService:AuthService,\r\n    private router:Router,\r\n    private flashMessage:FlashMessagesService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // double check if anyone is logged in\r\n    if (JSON.parse(localStorage.getItem('user'))){\r\n      this.id = JSON.parse(localStorage.getItem('user')).id;\r\n    }\r\n    // console.log(this.user._id);\r\n    // console.log(this.id);\r\n\r\n  }\r\n\r\n  getLoggedInIdAndRoute(): void{\r\n    this.id = JSON.parse(localStorage.getItem('user')).id;\r\n    this.router.navigate((['/profile', this.id]));\r\n  }\r\n\r\n  onLogoutClick(){\r\n    this.authService.logout();\r\n    // authService.logout();\r\n    this.flashMessage.show('You have been logged out!',{\r\n      cssClass: 'alert-success',\r\n      timeout:3000\r\n    });\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" href=\"#\">The Arcade Library</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarsExampleDefault\" aria-controls=\"navbarsExampleDefault\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarsExampleDefault\">\r\n    <ul class=\"navbar-nav mr-auto navbar-left\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/search']\" >Search <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav navbar-right\">\r\n      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/dashboard']\" >Dashboard <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n<!--      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">-->\r\n<!--        <a class=\"nav-link\" [routerLink]=\"['/profile', id]\" >Profile <span class=\"sr-only\">(current)</span></a>-->\r\n<!--      </li>-->\r\n      <!--      TODO: figure out why'hover' action is different after removing routerLink :o   -->\r\n<!--      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">-->\r\n<!--        <a class=\"nav-link\"  (click)=\"getLoggedInIdAndRoute()\" >Profile <span class=\"sr-only\">(current)</span></a>-->\r\n<!--      </li>-->\r\n      <li  class=\"nav-item active\" *ngIf=\"authService.loggedIn()\">\r\n        <a class=\"nav-link\"  [routerLink]=\"['/profile', authService.getLocalId()]\" >Profile <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li  class=\"nav-item active\" *ngIf=\"!authService.loggedIn()\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/login']\" >Login <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li  class=\"nav-item active\" *ngIf=\"!authService.loggedIn()\">\r\n        <a class=\"nav-link\" [routerLink]=\"['/register']\" >Register <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li  class=\"nav-item\" *ngIf=\"authService.loggedIn()\">\r\n        <a class=\"nav-link\" href=\"#\" (click)=\"onLogoutClick()\"  >Logout</a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport {ActivatedRoute, Router, ParamMap, RouterEvent, NavigationEnd} from \"@angular/router\";\r\nimport {UserData} from \"../../models/UserData\";\r\nimport {CommentsService} from \"../../services/comments/comments.service\";\r\nimport {FriendsService} from \"../../services/friends/friends.service\";\r\nimport {filter, takeUntil} from \"rxjs/operators\";\r\nimport {Subject} from \"rxjs\";\r\nimport {Friend} from \"../../models/Friend\";\r\nimport {ProfileService} from \"../../services/profile/profile.service\";\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.css']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  user:UserData;\r\n  profile:UserData;\r\n  comment: string;\r\n  editingProfile: boolean;\r\n  newProfile: string;\r\n\r\n  rows: string;\r\n\r\n  id: string;\r\n\r\n  // TODO: What is this..?\r\n  public destroyed = new Subject<any>();\r\n\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router,\r\n    private commentsService: CommentsService,\r\n    private route: ActivatedRoute,\r\n    private friendsService: FriendsService,\r\n    private profileService: ProfileService\r\n  ) {  }\r\n\r\n  ngOnInit(): void {\r\n    this.fetchData();\r\n\r\n    // set profile variables?\r\n    this.editingProfile = false;\r\n\r\n\r\n    // re-fetch data on navigation\r\n    this.router.events.pipe(\r\n      filter((event: RouterEvent) => event instanceof NavigationEnd),\r\n      takeUntil(this.destroyed)\r\n    ).subscribe(() => {\r\n        this.fetchData();\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyed.next();\r\n    this.destroyed.complete();\r\n  }\r\n\r\n  fetchData(): void{\r\n    // console.log(this.route.snapshot.paramMap.get('id'));\r\n    this.id = this.route.snapshot.paramMap.get('id');\r\n    // console.log(this.id);\r\n\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    // TODO: make get profile by id method on authservice?\r\n    this.authService.getUserById(this.id).subscribe(profile => {\r\n        this.profile = profile.user;\r\n\r\n        this.newProfile = this.profile.profile;\r\n\r\n        // grab rows for profile\r\n        let rowCount = 1;\r\n        let profileString = this.newProfile;\r\n\r\n        for(let i = 0; i < profileString.length; i++){\r\n          let char = profileString[i];\r\n\r\n          if (char === '\\n'){\r\n            rowCount++;\r\n          }\r\n        }\r\n\r\n        this.rows = String(rowCount);\r\n        // console.log(this.rows);\r\n\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  addComment(): void{\r\n    // TODO: implement browsing to other profile pages and adding comments to them\r\n\r\n    // TODO: refactor test code\r\n    this.commentsService.addComment(this.id, this.comment).subscribe( res => {\r\n      if (res.success === true){\r\n        // no user update needed; comment added to another user\r\n\r\n        // TODO: why did I do this? is it necessary?\r\n        // this.user = res.user;\r\n      }\r\n    })\r\n\r\n    // console.log(this.comment);\r\n\r\n    // reset input field\r\n    this.comment = '';\r\n  }\r\n\r\n  addFriend(): void{\r\n    this.friendsService.addFriend(this.id).subscribe(res => {\r\n      if (res.success === true){\r\n        // update user data\r\n        this.authService.updateUserData(res.user);\r\n        this.user = res.user;\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteFriend(): void{\r\n    this.friendsService.deleteFriend(this.id).subscribe(res => {\r\n      if (res.success === true){\r\n        // update user data\r\n        this.authService.updateUserData(res.user);\r\n        this.user = res.user;\r\n      }\r\n    })\r\n  }\r\n\r\n  isMyProfile(): boolean{\r\n    let self: string = String(this.user._id);\r\n    let profileId: string = this.id;\r\n\r\n    if (self === profileId){\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  isFriend(): boolean{\r\n    // console.log(this.user);\r\n\r\n    let profileId: string = this.id;\r\n    let friendsArr: Friend[] = this.user.friends;\r\n\r\n    for (let i = 0; i < friendsArr.length; i++){\r\n      // console.log(friendsArr[i]);\r\n      let friendId: string = String(friendsArr[i]);\r\n      if (friendId === profileId) return true;\r\n    }\r\n\r\n    return false;\r\n    //\r\n    // let friend: Friend = this.user.friends.find((tmpFriend) => {\r\n    //   return tmpFriend._id === friendId;\r\n    // });\r\n    //\r\n    // if (friend) return true\r\n    // else return false;\r\n\r\n  }\r\n\r\n  editProfile(): void{\r\n    this.editingProfile = true;\r\n    // console.log(this.profile.profile);\r\n  }\r\n\r\n  submitEditProfile(): void{\r\n    // console.log(this.newProfile);\r\n\r\n    this.profileService.editProfile(this.newProfile).subscribe( res => {\r\n      if (res.success === true){\r\n        this.authService.updateUserData(res.user);\r\n        this.user = res.user;\r\n        this.profile = res.user;\r\n      }\r\n    })\r\n\r\n    this.editingProfile = false;\r\n  }\r\n\r\n}\r\n","<div *ngIf=\"profile\">\r\n  <h2 class=\"page-header\">{{profile.name}}</h2>\r\n  <ul class=\"list-group\">\r\n    <li class=\"list-group-item\">Username: {{profile.username}}</li>\r\n    <li class=\"list-group-item\">Email: {{profile.email}}</li>\r\n    <li class=\"list-group-item\">\r\n      <h3>High Scores</h3>\r\n\r\n      <!--      <h1>BrickSmash</h1>-->\r\n      <p>BrickSmash: {{ profile.games.bricksmash.highscore }}</p>\r\n\r\n      <!--      <h1>Tetris</h1>-->\r\n      <p>Tetris: {{ profile.games.tetris.highscore }}</p>\r\n    </li>\r\n    <li class=\"list-group-item\">\r\n      <h3>About Me</h3>\r\n      <p *ngIf=\"!editingProfile\" >{{ profile.profile }}</p>\r\n      <ng-template [ngIf]=\"isMyProfile()\">\r\n        <button *ngIf=\"!editingProfile; else elseBlock\" (click)=\"editProfile()\">Edit Profile</button>\r\n        <ng-template #elseBlock>\r\n          <form (ngSubmit)=\"submitEditProfile()\">\r\n<!--            <input-->\r\n<!--              type=\"text\"-->\r\n<!--              name=\"newProfile\"-->\r\n<!--              [(ngModel)]=\"newProfile\"-->\r\n<!--            >-->\r\n            <textarea\r\n              rows=\"{{ this.rows }}\"\r\n              name=\"newProfile\"\r\n              [(ngModel)]=\"newProfile\"\r\n            ></textarea>\r\n            <br>\r\n            <button>Submit</button>\r\n          </form>\r\n        </ng-template>\r\n      </ng-template>\r\n    </li>\r\n  </ul>\r\n\r\n  <form *ngIf=\"!isMyProfile()\"  (ngSubmit)=\"addComment()\">\r\n    <label>Comment:</label>\r\n    <input\r\n      type=\"text\"\r\n      name=\"comment\"\r\n      [(ngModel)]=\"comment\"\r\n    >\r\n    <button  >Submit</button>\r\n  </form>\r\n<!--  TODO: Why is isFriend() run 4 times per call-->\r\n  <button *ngIf=\"!isFriend() && !isMyProfile()\" (click)=\"addFriend()\">Add to Friends!</button>\r\n  <button *ngIf=\"isFriend() && !isMyProfile()\" (click)=\"deleteFriend()\">Remove Friend</button>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {  ValidateService } from \"../../services/validate.service\";\r\nimport { FlashMessagesService } from \"angular2-flash-messages\";\r\nimport { AuthService } from \"../../services/auth.service\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  name: String;\r\n  username: String;\r\n  email: String;\r\n  password: String;\r\n\r\n  constructor(\r\n    private validateService: ValidateService,\r\n    private flashMessage:FlashMessagesService,\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onRegisterSubmit(){\r\n    const user = {\r\n      name: this.name,\r\n      username: this.username,\r\n      email: this.email,\r\n      password: this.password\r\n    }\r\n\r\n    // Required Fields\r\n    if (!this.validateService.validateRegister(user)){\r\n      this.flashMessage.show('Please fill in all fields', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Validate email\r\n    if (!this.validateService.validateEmail(user.email)){\r\n      this.flashMessage.show('Please use a valid email', {cssClass: 'alert-danger', timeout: 3000});\r\n      return false;\r\n    }\r\n\r\n    // Register User\r\n    this.authService.registerUser(user).subscribe(data => {\r\n      if(data.success){\r\n        this.flashMessage.show('You are now registered and can log in', {cssClass: 'alert-success', timeout: 3000});\r\n        this.router.navigate(['/login']);\r\n      }\r\n      else {\r\n        this.flashMessage.show('Something went wrong :( ', {cssClass: 'alert-danger', timeout: 3000});\r\n        this.router.navigate(['/register']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<h2 class=\"page-header\">Register</h2>\r\n<form (submit)=\"onRegisterSubmit()\" >\r\n  <div class=\"form-group\">\r\n    <label>Name</label>\r\n    <input type=\"text\" [(ngModel)]=\"name\" name=\"name\" class=\"form-control\">\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Username</label>\r\n    <input type=\"text\" [(ngModel)]=\"username\" name=\"username\" class=\"form-control\" >\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Email</label>\r\n    <input type=\"text\" [(ngModel)]=\"email\" name=\"email\" class=\"form-control\" >\r\n  </div>\r\n  <div class=\"form-group\">\r\n    <label>Password</label>\r\n    <input type=\"password\" [(ngModel)]=\"password\" name=\"password\" class=\"form-control\" >\r\n  </div>\r\n  <input type=\"submit\" class=\"btn btn-primary\" value=\"Submit\" >\r\n</form>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {SearchService} from \"../../services/search/search.service\";\r\nimport {UserData} from \"../../models/UserData\";\r\n\r\n@Component({\r\n  selector: 'app-search',\r\n  templateUrl: './search.component.html',\r\n  styleUrls: ['./search.component.css']\r\n})\r\nexport class SearchComponent implements OnInit {\r\n  searchTerm: string;\r\n  type: string;\r\n  returnedUsers: UserData[];\r\n\r\n  constructor(\r\n    private searchService: SearchService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    // set type to all to match 'chekced'\r\n    this.type = 'all';\r\n\r\n    // initialize search term\r\n    this.searchTerm = '';\r\n  }\r\n\r\n  submitSearch(): void {\r\n\r\n    // set search term to return all if blank\r\n    if (this.searchTerm.trim() === ''){\r\n      this.searchTerm = '.*';\r\n    }\r\n\r\n    this.searchService.searchUsers(this.searchTerm, this.type).subscribe( resArray => {\r\n      console.log(resArray);\r\n      this.returnedUsers = resArray;\r\n    });\r\n\r\n    // check if searchTerm was .* and reset to empty string\r\n    if (this.searchTerm === '.*'){\r\n      this.searchTerm = '';\r\n    }\r\n    // console.log(\"Search value:\" + this.searchValue);\r\n  }\r\n\r\n}\r\n","<div class=\"grid\">\r\n  <div class=\"searchContainer\">\r\n\r\n    <form (ngSubmit)=\"submitSearch()\">\r\n      <div class=\"searchBox\" >\r\n\r\n        <label>User Search:\r\n          <input\r\n            name=\"searchValue\"\r\n            [(ngModel)]=\"searchTerm\"\r\n            type=\"text\"/>\r\n        </label>\r\n\r\n        <button type=\"submit\">Search</button>\r\n\r\n      </div>\r\n\r\n      <div class=\"radioOptions\">\r\n        <div class=\"options\">\r\n          <label>Name\r\n            <input (click)=\"type='name'\" type=\"radio\" name=\"type\"  />\r\n          </label>\r\n        </div>\r\n        <div class=\"options\">\r\n          <label>Username\r\n            <input (click)=\"type='username'\" type=\"radio\" name=\"type\"  />\r\n          </label>\r\n        </div>\r\n        <div class=\"options\">\r\n          <label>All\r\n            <input (click)=\"type='all'\" type=\"radio\" name=\"type\" checked  />\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </form>\r\n\r\n  </div>\r\n\r\n  <div class=\"resultsBox\">\r\n    <h3 *ngIf=\"returnedUsers\">Results</h3>\r\n    <table>\r\n      <thead *ngIf=\"returnedUsers\">\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Username</th>\r\n          <th>Bricksmash</th>\r\n          <th>Tetris</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let user of returnedUsers\">\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.username }}</td>\r\n          <td>{{ user.games.bricksmash.highscore }}</td>\r\n          <td>{{ user.games.tetris.highscore }}</td>\r\n          <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n<!--    <table *ngFor=\"let user of returnedUsers\">-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Name</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Username</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Scores</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th></th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>************************************************</td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--      <tr *ngIf=\"!returnedUsers\">-->\r\n<!--&lt;!&ndash;        <td style=\"font-style: italic\">Awaiting input...</td>&ndash;&gt;-->\r\n<!--        <td style=\"font-style: italic\"></td>-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--        <th>Name</th>-->\r\n<!--        <th>Username</th>-->\r\n<!--        <th>Scores</th>-->\r\n<!--        <th></th>-->\r\n<!--&lt;!&ndash;        <td>{{ user.name }}</td>&ndash;&gt;-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--&lt;!&ndash;        <th>Username:</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>{{ user.username }}</td>&ndash;&gt;-->\r\n<!--        <td>{{ user.name }}</td>-->\r\n<!--        <td>{{ user.username }}</td>-->\r\n<!--        <td>Bricksmash: {{ user.games.bricksmash.highscore }}</td>-->\r\n<!--&lt;!&ndash;        <td>Tetris: {{ user.games.tetris.highscore }}</td>&ndash;&gt;-->\r\n<!--        <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>-->\r\n<!--      </tr>-->\r\n<!--      <tr>-->\r\n<!--        <td></td>-->\r\n<!--        <td></td>-->\r\n<!--        <td>Tetris: {{ user.games.tetris.highscore }}</td>-->\r\n<!--      </tr>-->\r\n<!--      <th colspan=\"4\" >*****************************************************************</th>-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Bricksmash:</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>{{ user.games.bricksmash.highscore }}</td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <th>Tetris:</th>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td>{{ user.games.tetris.highscore }}</td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;&lt;!&ndash;        <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>&ndash;&gt;&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      <tr>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;        <td><button [routerLink]=\"['/profile', user._id]\" >View Profile</button></td>&ndash;&gt;-->\r\n<!--&lt;!&ndash;      </tr>&ndash;&gt;-->\r\n<!--    </table>-->\r\n  </div>\r\n</div>\r\n","import {Injectable} from \"@angular/core\";\r\nimport {Router, CanActivate} from \"@angular/router\";\r\nimport {AuthService} from \"../services/auth.service\";\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n  constructor(\r\n    private authService:AuthService,\r\n    private router:Router\r\n  ) {}\r\n\r\n  canActivate():boolean {\r\n    if (this.authService.loggedIn()){\r\n      return true;\r\n    }\r\n    else{\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","export class Ball {\r\n  x: any;\r\n  y: any;\r\n  velocity: {\r\n    x: number;\r\n    y: number\r\n  };\r\n  radius: any;\r\n  color: any;\r\n  mass: number;\r\n  lives: number;\r\n  score: number;\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D) {\r\n    this.spawn();\r\n  }\r\n\r\n  spawn(): void{\r\n    this.x = this.ctx.canvas.width/2;\r\n    this.y = this.ctx.canvas.height-30;\r\n    this.velocity = {\r\n      x: 2,\r\n      y: -2\r\n    };\r\n    // this.velocity = {\r\n    //   x: Math.random() * (5 - 2) + 2,\r\n    //   y: -Math.random() * (5 - 2) - 2\r\n    // };\r\n    this.radius = 10;\r\n    this.color = 'orange';\r\n    this.mass = 1;\r\n    // this.lives = 3;\r\n    // this.score = 0;\r\n  }\r\n\r\n  draw(): void{\r\n    // draw circle\r\n    this.ctx.beginPath();\r\n    this.ctx.fillStyle = this.color;\r\n    this.ctx.arc(this.x, this.y, this.radius,0, Math.PI*2);\r\n    this.ctx.fill();\r\n    this.ctx.closePath();\r\n\r\n\r\n    // this.ctx.beginPath();\r\n    // this.ctx.fillStyle = this.color;\r\n    // this.ctx.fill();\r\n    // this.ctx.arc(this.x, this.y, this.radius,0, Math.PI*2);\r\n    // this.ctx.closePath();\r\n  }\r\n\r\n  update(): void{\r\n    // if (this.score === bricks.length){\r\n    //\r\n    //   alert(\"YOU WIN, CONGRATULATIONS!!\");\r\n    //   document.location.reload();\r\n    // } else{\r\n    //   this.draw();\r\n    //\r\n    // }\r\n\r\n    // collision detection with screen\r\n    if (this.x - this.radius <= 0 || this.x + this.radius >= this.ctx.canvas.width){\r\n      this.velocity.x = -this.velocity.x;\r\n      // this.x = -this.x;\r\n    }\r\n\r\n    if (this.y - this.radius <= 0 || this.y + this.radius >= this.ctx.canvas.height){\r\n      this.velocity.y = -this.velocity.y;\r\n      // this.y = -this.y;\r\n    }\r\n\r\n    // // handle lives\r\n    // else if (this.y + this.velocity.y > this.ctx.canvas.height - this.radius){\r\n    //   if (this.x > paddle.paddleX && this.x < paddle.paddleX + paddle.paddleWidth && (this.y + this.velocity.y > this.ctx.canvas.height - this.radius - paddle.paddleHeight || this.y + this.velocity.y < this.radius + paddle.paddleHeight)){//if ball hits paddle, reverse direction\r\n    //     // adjust angle of ball coming off paddle by modifying x value\r\n    //     this.velocity.x = this.velocity.x * paddleCollision(this, paddle);\r\n    //\r\n    //     // reflect y velocity\r\n    //     this.velocity.y = -this.velocity.y;\r\n    //   }\r\n    //   else{\r\n    //     this.lives--;\r\n    //     if (this.lives == -1){ // updated logic from '!lives' to allow lives to hit 0 before game over is given\r\n    //       alert(\"GAME OVER\"); //if ball hits bottom of screen, alert GAME OVER\r\n    //       document.location.reload();\r\n    //     }\r\n    //     else{\r\n    //       this.x = canvas.width / 2;\r\n    //       this.y = canvas.height - 30;\r\n    //       this.velocity = {\r\n    //         x: Math.random() * (5-2) + 2,\r\n    //         y: -Math.random() * (5-2) - 2\r\n    //       };\r\n    //       paddle.paddleX = (canvas.width - paddle.paddleWidth) / 2;\r\n    //     }\r\n    //   }\r\n    // }\r\n    //\r\n    //\r\n    this.x += this.velocity.x;\r\n    this.y += this.velocity.y;\r\n\r\n    this.draw();\r\n  }\r\n}\r\n","export class Brick {\r\n  x: any;\r\n  y: any;\r\n  status: any;\r\n  height: any;\r\n  width: any;\r\n  brickPadding: number;\r\n  brickOffsetTop: number;\r\n  brickOffsetLeft: number;\r\n  color: string;\r\n\r\n\r\n  constructor(private ctx: CanvasRenderingContext2D,\r\n              x,\r\n              y) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.spawn();\r\n  }\r\n  //testingggg\r\n  // this.velocity = {\r\n  //   x: Math.random() * (5-2) + 2,\r\n  //   y: -Math.random() * (5-2) - 2\r\n  // };\r\n\r\n  private spawn(): void{\r\n    this.color = 'green';\r\n    this.status = 1;\r\n    this.height = 20;\r\n    this.width = 75;\r\n\r\n    this.brickPadding = 10;\r\n    this.brickOffsetTop = 30;\r\n    this.brickOffsetLeft = 30;\r\n  }\r\n\r\n  draw(): void{\r\n    this.ctx.beginPath();\r\n    this.ctx.rect(this.x, this.y, this.width, this.height);\r\n    this.ctx.fillStyle = this.color;\r\n    this.ctx.fill();\r\n    this.ctx.closePath();\r\n\r\n  }\r\n\r\n  update(): void{\r\n    if (this.status == 1){\r\n      this.draw();\r\n\r\n    }\r\n    // collisionDetection(this,ball);\r\n  }\r\n}\r\n","export class Paddle {\r\n  height: number;\r\n  width: number;\r\n  x: number;\r\n  velocity: { x: number; y: number };\r\n  rightPressed: boolean;\r\n  leftPressed: boolean;\r\n  color: string;\r\n\r\n  constructor(\r\n    private ctx: CanvasRenderingContext2D\r\n  ) {\r\n      this.spawn();\r\n  }\r\n\r\n  spawn(): void{\r\n    this.color = 'blue';\r\n\r\n    this.height = 10;\r\n    this.width = 75;\r\n    this.x = (this.ctx.canvas.width - this.width) / 2;\r\n\r\n    this.rightPressed = false;\r\n    this.leftPressed = false;\r\n\r\n    //testingggg\r\n    this.velocity = {\r\n      x: Math.random() * (5 - 2) + 2,\r\n      y: -Math.random() * (5 - 2) - 2\r\n    }\r\n  }\r\n\r\n  draw(): void{\r\n    this.ctx.fillStyle = this.color;\r\n    this.ctx.fillRect(this.x,this.ctx.canvas.height - this.height, this.width, this.height);\r\n    // this.ctx.rect(this.x,this.ctx.canvas.height - this.paddleHeight, this.paddleWidth, this.paddleHeight);\r\n\r\n\r\n    // this.ctx.beginPath();\r\n    // this.ctx.fill();\r\n    // this.ctx.closePath();\r\n  }\r\n\r\n  update(): void{\r\n    this.draw();\r\n\r\n    //detect whether the paddle is off the screen and move accordingly\r\n    if (this.rightPressed && this.x < this.ctx.canvas.width - this.width){\r\n      this.x += 7;\r\n    }\r\n\r\n    if (this.leftPressed && this.x > 0){\r\n      this.x -= 7;\r\n    }\r\n\r\n  }\r\n}\r\n","import {BLOCK_SIZE, COLORS, SHAPES} from \"./constants\";\r\n\r\nexport interface IPiece {\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape: number[][];\r\n}\r\n\r\nexport class Piece implements IPiece {\r\n  x: number;\r\n  y: number;\r\n  color: string;\r\n  shape: number[][];\r\n  colorDarker: string;\r\n  colorLighter: string;\r\n\r\n  constructor(\r\n    private ctx: CanvasRenderingContext2D\r\n  ) {\r\n    this.spawn();\r\n  }\r\n\r\n  spawn(): void{\r\n    const typeId: number = this.randomizeTetrominoType(COLORS.length - 1);\r\n    // const colorId: number = this.randomizeTetrominoType(COLORS.length);\r\n    // const shapeId: number = this.randomizeTetrominoType(SHAPES.length);\r\n    this.color = COLORS[typeId];\r\n    this.shape = SHAPES[typeId]; //[[2, 0, 0], [2, 2, 2], [0, 0, 0]];\r\n\r\n    // Position where the shape spawns\r\n    this.x = 3;\r\n    this.y = 0;\r\n  }\r\n\r\n  draw(): void{\r\n    // removed scaling- was re-scaling on every draw..? :( (making the pieces bigger and bigger)\r\n    this.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0){\r\n          this.ctx.fillStyle = this.color;\r\n          const currentX = this.x + x;\r\n          const currentY = this.y + y;\r\n          this.ctx.fillRect(currentX, currentY, 1, 1);\r\n          // this.add3D(this.ctx, currentX, currentY);\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n\r\n  private add3D(ctx: CanvasRenderingContext2D, x: number, y: number): void {\r\n    // Darker Color\r\n    ctx.fillStyle = this.colorDarker;\r\n\r\n    // Vertical\r\n    ctx.fillRect(x + .9, y, .1, 1);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x, y + .9, 1, .1);\r\n\r\n    //Darker Color - Inner\r\n    // Vertical\r\n    ctx.fillRect(x + .65, y + .3, .05, .3);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x + .3, y + .6, .4, .05);\r\n\r\n    // Lighter Color - Outer\r\n    ctx.fillStyle = this.colorLighter;\r\n\r\n    // Lighter Color - Inner\r\n    // Vertical\r\n    ctx.fillRect(x + .3, y + .3, .05, .3);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x + .3, y + .3, .4, .05);\r\n\r\n    // Lighter Color - Outer\r\n    // Vertical\r\n    ctx.fillRect(x, y, .05, 1);\r\n    ctx.fillRect(x, y, .1, .95);\r\n\r\n    // Horizontal\r\n    ctx.fillRect(x, y, 1 , .05);\r\n    ctx.fillRect(x, y, .95, .1);\r\n  }\r\n\r\n  move(p: IPiece): void{\r\n    this.x = p.x;\r\n    this.y = p.y;\r\n    this.shape = p.shape;\r\n  }\r\n\r\n  randomizeTetrominoType(noOfTypes: number): number{\r\n    return Math.floor(Math.random() * noOfTypes + 1);\r\n    // return Math.floor(Math.random() * Math.floor(noOfTypes));\r\n  }\r\n\r\n  drawNext(ctxNext: CanvasRenderingContext2D): void {\r\n    ctxNext.clearRect(0, 0, ctxNext.canvas.width, ctxNext.canvas.height);\r\n    // this.shape.forEach((row, y) => {\r\n    //     row.forEach((value, x) => {\r\n    //         if (value > 0) {\r\n    //             this.addNextShadow(ctxNext, x, y);\r\n    //         }\r\n    //     });\r\n    // });\r\n\r\n    ctxNext.fillStyle = this.color;\r\n    this.shape.forEach((row, y) => {\r\n      row.forEach((value, x) => {\r\n        if (value > 0) {\r\n          ctxNext.fillStyle = this.color;\r\n          const currentX = x + .025;\r\n          const currentY = y + .025;\r\n          ctxNext.fillRect(currentX, currentY, 1-.025, 1 -.025);\r\n          this.add3D(ctxNext, currentX, currentY);\r\n        }\r\n      });\r\n    });\r\n  }\r\n}\r\n","// map keys to key codes\r\nexport class KEY {\r\n  static readonly RIGHT = 'ArrowRight';\r\n  static readonly LEFT = 'ArrowLeft';\r\n\r\n  static readonly ESC = 'Escape';\r\n  static readonly SPACE = 'Space';\r\n  static readonly UP = 'ArrowUp';\r\n  static readonly DOWN = 'ArrowDown';\r\n}\r\n\r\n\r\n// Tetris constants\r\nexport const COLS = 10;\r\nexport const ROWS = 20;\r\nexport const BLOCK_SIZE = 30;\r\nexport const LINES_PER_LEVEL = 10;\r\n\r\nexport const COLORS = [\r\n  'none',\r\n  'cyan',\r\n  'blue',\r\n  'orange',\r\n  'yellow',\r\n  'green',\r\n  'purple',\r\n  'red'\r\n];\r\n\r\nexport const SHAPES = [\r\n  [],\r\n  [[0, 0, 0, 0], [1, 1, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]],\r\n  [[2, 0, 0], [2, 2, 2], [0, 0, 0]],\r\n  [[0, 0, 3], [3, 3, 3], [0, 0, 0]],\r\n  [[4, 4], [4, 4]],\r\n  [[0, 5, 5], [5, 5, 0], [0, 0, 0]],\r\n  [[0, 6, 0], [6, 6, 6], [0, 0, 0]],\r\n  [[7, 7, 0], [0, 7, 7], [0, 0, 0]]\r\n]\r\n\r\nexport class POINTS {\r\n  static readonly SINGLE = 100;\r\n  static readonly DOUBLE = 300;\r\n  static readonly TRIPLE = 500;\r\n  static readonly TETRIS = 800;\r\n  static readonly SOFT_DROP = 1;\r\n  static readonly HARD_DROP = 2;\r\n}\r\n\r\nexport class LEVEL {\r\n  static readonly 0 = 800;\r\n  static readonly 1 = 720;\r\n  static readonly 2 = 630;\r\n  static readonly 3 = 550;\r\n  static readonly 4 = 470;\r\n  static readonly 5 = 380;\r\n  static readonly 6 = 300;\r\n  static readonly 7 = 220;\r\n  static readonly 8 = 130;\r\n  static readonly 9 = 100;\r\n  static readonly 10 = 80;\r\n  static readonly 11 = 80;\r\n  static readonly 12 = 80;\r\n  static readonly 13 = 70;\r\n  static readonly 14 = 70;\r\n  static readonly 15 = 70;\r\n  static readonly 16 = 50;\r\n  static readonly 17 = 50;\r\n  static readonly 18 = 50;\r\n  static readonly 19 = 30;\r\n  static readonly 20 = 30;\r\n  // 29+ is 20ms\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport {map} from 'rxjs/operators';\r\nimport { Observable } from \"rxjs\";\r\nimport { JwtHelperService } from \"@auth0/angular-jwt\";\r\n\r\nimport { User } from \"../models/user\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  authToken: any;\r\n  user: any;\r\n\r\n  constructor(\r\n    private http:HttpClient,\r\n    public jwtHelper: JwtHelperService\r\n  ) { }\r\n\r\n  registerUser(user) {\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post<User>('users/register', user, {\r\n      headers: headers\r\n    }).pipe(map(res => res));\r\n  }\r\n\r\n  authenticateUser(user){\r\n    // let headers = new Headers();\r\n    let headers = new HttpHeaders();\r\n    headers.append('Content-Type','application/json');\r\n    return this.http.post<User>('users/authenticate', user, {\r\n      headers:headers\r\n    }).pipe(map(res => res));\r\n  }\r\n\r\n  getProfile(): Observable<User>{\r\n    this.loadToken();\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization':this.authToken\r\n      })\r\n    }\r\n    return this.http.get<User>('users/profile', httpOptions\r\n    );\r\n  }\r\n\r\n  // TODO: make new api endpoint for user by id?\r\n  getUserById(id: string): Observable<User> {\r\n    // this.loadToken();\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n        // 'Authorization':this.authToken\r\n      })\r\n    }\r\n\r\n    console.log('The id of the profile is: '+ id);\r\n    return this.http.get<User>(`users/profile/${id}`, httpOptions\r\n    );\r\n  }\r\n\r\n  storeUserData(token, user){\r\n    let decodedToken = this.jwtHelper.decodeToken(token);\r\n    // localStorage.setItem('id_token', token);\r\n    localStorage.setItem('id_token', decodedToken);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    // this.authToken = token;\r\n    this.authToken = decodedToken;\r\n    this.user = user;\r\n  }\r\n\r\n  updateUserData(user){\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.user = user;\r\n  }\r\n\r\n  loadToken(){\r\n    const token = localStorage.getItem('id_token');\r\n    this.authToken = token;\r\n  }\r\n\r\n  loggedIn(): boolean {\r\n    return !this.jwtHelper.isTokenExpired();\r\n  }\r\n\r\n  logout(){\r\n    this.authToken = null;\r\n    this.user = null;\r\n    localStorage.clear();\r\n  }\r\n\r\n  getLocalId(): string {\r\n    return JSON.parse(localStorage.getItem('user'))._id;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport { Comment } from \"../../models/Comment\";\r\nimport {User} from \"../../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CommentsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  deleteComment(commentId: number): Observable<User> {\r\n    return this.http.delete<User>(`users/deleteComment/${commentId}`\r\n    ).pipe();\r\n  }\r\n\r\n  // TODO: refactor test code (recipientId\r\n  addComment(recipientId: string, comment: string): Observable<User> {\r\n    const userId: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    const body = {\r\n      toId: recipientId,\r\n      userId: userId,\r\n      commentBody: comment\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    console.log('Recipient id: ' + recipientId);\r\n\r\n    return this.http.put<User>(`users/addComment`,\r\n      body,\r\n      httpOptions\r\n    ).pipe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FriendsService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  addFriend(friendId: string): Observable<User> {\r\n    const id: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    const body = {\r\n      id: id,\r\n      friendId: friendId\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      })\r\n    }\r\n\r\n    console.log(`friend id is ${friendId}`);\r\n\r\n    return this.http.put<User>(`users/addFriend`,\r\n      body,\r\n      httpOptions\r\n    ).pipe();\r\n  }\r\n\r\n  deleteFriend(friendId: string): Observable<User> {\r\n    const id: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    // const body = {\r\n    //   id: id,\r\n    //   friendId: friendId\r\n    // }\r\n    //\r\n    // const httpOptions = {\r\n    //   headers: new HttpHeaders({\r\n    //     'Content-Type': 'application/json'\r\n    //   })\r\n    // }\r\n\r\n    console.log(`friend id is ${friendId}`);\r\n\r\n    return this.http.delete<User>(`users/deleteFriend/${id}/${friendId}`,\r\n      ).pipe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Brick} from \"../../../models/Brick\";\r\nimport {Paddle} from \"../../../models/Paddle\";\r\nimport {Ball} from \"../../../models/Ball\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BricksmashService {\r\n\r\n  constructor() { }\r\n\r\n  // hasCollision(ball: Ball, paddle: Paddle, bricks: Brick[]): void{\r\n  //   for (let i = 0; i < bricks.length; i++){\r\n  //     this.brickCollision(bricks[i], ball);\r\n  //   }\r\n  // }\r\n\r\n  // detect if ball has collided with paddle\r\n  paddleCollision(ball: Ball, paddle: Paddle, ctx: CanvasRenderingContext2D): boolean{\r\n\r\n    if ((ball.x > paddle.x) &&\r\n      (ball.x < paddle.x + paddle.width) &&\r\n      (\r\n        (ball.y + ball.velocity.y > ctx.canvas.height - ball.radius - paddle.height) ||\r\n        (ball.y + ball.velocity.y < ball.radius + paddle.height)\r\n      )){//if ball hits paddle, reverse direction\r\n      // adjust angle of ball coming off paddle by modifying x value\r\n      // ball.velocity.x = ball.velocity.x * paddleCollision(ball, paddle);\r\n\r\n      // reflect y velocity\r\n      ball.velocity.y = -ball.velocity.y;\r\n\r\n      return true;\r\n    }\r\n    else{\r\n      // ball.lives--;\r\n      // console.log('lives: ' + ball.lives);\r\n      return false;\r\n      // if (ball.lives == -1){ // updated logic from '!lives' to allow lives to hit 0 before game over is given\r\n      //   alert(\"GAME OVER\"); //if ball hits bottom of screen, alert GAME OVER\r\n      //   document.location.reload();\r\n      // }\r\n      // else{\r\n      //   ball.x = ctx.canvas.width / 2;\r\n      //   ball.y = ctx.canvas.height - 30;\r\n      //   ball.velocity = {\r\n      //     x: Math.random() * (5-2) + 2,\r\n      //     y: -Math.random() * (5-2) - 2\r\n      //   };\r\n      //   paddle.paddleX = (canvas.width - paddle.paddleWidth) / 2;\r\n      // }\r\n    }\r\n\r\n\r\n    // //TODO figure out how to handle x becoming 0 causing ball not to change direction :(\r\n    // let ballPos = ball.x - paddle.x;\r\n    // let relativePos = ( paddle.width - ballPos );\r\n    // let angle = relativePos * ( Math.PI / paddle.width ); //translate to radians - this finds the number of radians per paddle pixel\r\n    //\r\n    // // Once you got the angle, take the cos of it to grab the direction.\r\n    // //Multiply the direction times the ball's vel, and you got the ball's new velocity\r\n    // let newXvel = Math.cos( angle ) * ball.velocity.x;\r\n    //\r\n    // return newXvel;\r\n\r\n  }\r\n\r\n\r\n\r\n  // detect if ball has collided with brick\r\n  brickCollision(brick: Brick, ball: Ball): boolean{\r\n\r\n    if (brick.status === 1){\r\n      if (\r\n        (ball.x > brick.x) &&\r\n        (ball.x < brick.x + brick.width) &&\r\n        (ball.y > brick.y) &&\r\n        (ball.y < brick.y + brick.height)\r\n      ){\r\n        ball.velocity.y = -ball.velocity.y; //if the center of the brick in question is within a brick, then a collision is considered to have occurred\r\n        brick.status = 0;\r\n        // ball.score++;\r\n\r\n        console.log('collision detected!');\r\n        return true;\r\n      }\r\n\r\n    }\r\n\r\n    return false;\r\n\r\n  }\r\n\r\n  // Did ball 'collide' with bottom of screen\r\n  screenCollision(ball: Ball, ctx: CanvasRenderingContext2D): boolean{\r\n    let collisionOccurred = false;\r\n    // collision detection with screen\r\n    if (ball.x - ball.radius <= 0 || ball.x + ball.radius >= ctx.canvas.width){\r\n      ball.velocity.x = -ball.velocity.x;\r\n      // this.x = -this.x;\r\n      // collisionOccurred = true;\r\n    }\r\n\r\n    // todo experiment\r\n    // if (ball.y - ball.radius <= 0 || ball.y + ball.radius >= ctx.canvas.height){\r\n    if (ball.y - ball.radius <= 0){\r\n      ball.velocity.y = -ball.velocity.y;\r\n      ball.y = -ball.y;\r\n    }\r\n\r\n    if (ball.y + ball.radius >= ctx.canvas.height){\r\n      collisionOccurred = true;\r\n    }\r\n\r\n\r\n    ball.x += ball.velocity.x;\r\n    ball.y += ball.velocity.y;\r\n\r\n    return collisionOccurred;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {AuthService} from \"../auth.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/User\";\r\nimport {catchError, map} from \"rxjs/operators\";\r\nimport {HighScoreResponse} from \"../../models/HighScoreResponse\";\r\nimport {UserData} from \"../../models/UserData\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GameService {\r\n\r\n  authToken: any;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService\r\n    ) { }\r\n\r\n  updateScore(scoreToUpdate: string, score: number): Observable<User> {\r\n    const userId: number = JSON.parse(localStorage.getItem('user'))._id;\r\n    const body = {\r\n      userId: userId,\r\n      score: score\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    console.log(`I'm about to update your score`);\r\n\r\n    // let headers = new HttpHeaders();\r\n    // headers.append('Content-Type', 'application/json');\r\n    // `http://localhost:8080/users/update-${scoreToUpdate}-score`\r\n    return this.http.put<User>(`users/update-${scoreToUpdate}-score`,\r\n      body,\r\n      httpOptions\r\n    ).pipe(\r\n      // catchError((err, user){\r\n      //   console.log(err, user);\r\n      // })\r\n    );\r\n\r\n    // return this.http.post('users/update-' + scoreToUpdate + '-score', body, {\r\n    //   headers: headers\r\n    // }); //.pipe(map(res => res));\r\n  }\r\n\r\n  getHighScores(game: string): Observable<UserData[]> {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    // TODO: update url to take parameter\r\n    return this.http.get<HighScoreResponse>(`users/games/highScores/${game}`,\r\n      httpOptions)\r\n      .pipe(\r\n        map(res => res.sortedUsers)\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {COLS, POINTS, ROWS} from \"../../../models/constants\";\r\nimport {IPiece} from \"../../../models/Piece\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TetrisService {\r\n\r\n  constructor() { }\r\n\r\n  getEmptyBoard(): number[][]{\r\n    return Array.from({ length: ROWS }, () => Array(COLS).fill(0));\r\n  }\r\n\r\n  valid(p: IPiece, board: number[][]): boolean{\r\n    return p.shape.every((row, dy) => {\r\n      return row.every((value, dx) => {\r\n        let x = p.x + dx;\r\n        let y = p.y + dy;\r\n        return (\r\n          this.isEmpty(value) ||\r\n          (this.insideWalls(x) &&\r\n            this.aboveFloor(y) &&\r\n            this.notOccupied(board, x, y))\r\n        );\r\n        // return value === 0 ||  // Empty cell\r\n        // (p.x + x >= 0 && // Left wall\r\n        //   p.x + x < COLS && // Right wall\r\n        //   p.y + y < ROWS) // Bottom wall -originally '<=' but was going through floor?\r\n      });\r\n    });\r\n  }\r\n\r\n  notOccupied(board: number[][], x: number, y: number): boolean {\r\n    return board[y] && board[y][x] === 0;\r\n  }\r\n\r\n  aboveFloor(y: number): boolean {\r\n    return y <= ROWS;\r\n  }\r\n\r\n  insideWalls(x: number): boolean {\r\n    return x >= 0 && x < COLS;\r\n  }\r\n\r\n  isEmpty(value: number): boolean {\r\n    return value === 0;\r\n  }\r\n\r\n  rotate(piece: IPiece): IPiece {\r\n    // Clone piece using JSON\r\n    let p: IPiece = JSON.parse(JSON.stringify(piece));\r\n\r\n    // Transpose matrix\r\n    for (let y = 0; y < p.shape.length; ++y){\r\n      for (let x = 0; x < y; ++x){\r\n        [p.shape[x][y], p.shape[y][x]] = [p.shape[y][x], p.shape[x][y]];\r\n      }\r\n    }\r\n\r\n    // Reverse order of the columns\r\n    p.shape.forEach(row => row.reverse());\r\n\r\n    // Return clone\r\n    return p;\r\n  }\r\n\r\n  getLinesClearedPoints(lines: number, level: number): number {\r\n    const lineClearPoints =\r\n      lines === 1\r\n        ? POINTS.SINGLE\r\n        : lines === 2\r\n        ? POINTS.DOUBLE\r\n        : lines === 3\r\n          ? POINTS.TRIPLE\r\n          : lines === 4\r\n            ? POINTS.TETRIS\r\n            : 0;\r\n\r\n    // depending on the level, give more points for line clears (+1 since first level is 0)\r\n    return (level + 1) * lineClearPoints;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {User} from \"../../models/User\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfileService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  editProfile(newProfile: string): Observable<User>{\r\n    const userId: number = JSON.parse(localStorage.getItem('user'))._id;\r\n\r\n    const body = {\r\n      userId: userId,\r\n      profile: newProfile\r\n    }\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n      })\r\n    }\r\n\r\n    return this.http.put<User>(`users/edit-profile`,\r\n      body,\r\n      httpOptions\r\n    ).pipe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {HttpClient, HttpHeaders, HttpParams} from \"@angular/common/http\";\r\nimport {Observable} from \"rxjs\";\r\nimport {UserData} from \"../../models/UserData\";\r\nimport {HighScoreResponse} from \"../../models/HighScoreResponse\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  searchUsers(searchTerm: string, type: string):Observable<UserData[]>{\r\n    // console.log(\"Search term: \" + searchTerm);\r\n    // console.log(\"Search type: \" + type);\r\n\r\n    // TODO: make httpOptions into classes? (reuse code)\r\n    let params = new HttpParams();\r\n    params = params.append('searchTerm', searchTerm);\r\n    params = params.append('type', type);\r\n\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json'\r\n      }),\r\n      params: params\r\n    }\r\n\r\n    return this.http.get<HighScoreResponse>(\r\n      `users/searchUsers`,\r\n      httpOptions\r\n    )\r\n      .pipe(\r\n        map(res => res.sortedUsers)\r\n      );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ValidateService {\r\n\r\n  constructor() { }\r\n\r\n  // changed to use bang operator to catch empty string on fields changed on form re-submission\r\n  validateRegister(user){\r\n    if(!user.name || !user.email || !user.username || !user.password){\r\n      return false;\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  validateEmail(email){\r\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}